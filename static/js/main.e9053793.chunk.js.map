{"version":3,"sources":["components/layout/MyLayout.tsx","redux/people/people.action.ts","redux/starships/starships.action.ts","components/widget/Hangar.tsx","redux/home-base/homeBase.action.ts","components/wrapper/withLoading.tsx","components/wrapper/withLoadingPeople.tsx","utils/Helper.ts","components/widget/Gravatar.tsx","components/widget/RandomPerson.tsx","components/widget/Squad.tsx","components/Home.tsx","redux/home-base/homeBase.selector.ts","components/people/PersonCard.tsx","components/people/PeopleList.tsx","components/People.tsx","components/starships/StarshipList.tsx","components/wrapper/withLoadingStarships.tsx","App.tsx","reportWebVitals.ts","redux/home-base/homeBase.saga.ts","services/SwapiUrls.ts","services/FetchHelper.ts","redux/people/people.saga.ts","redux/starships/starships.saga.ts","redux/root-saga.ts","redux/people/people.reducer.ts","redux/starships/starships.reducer.ts","redux/home-base/homeBase.reducer.ts","redux/store.ts","index.tsx"],"names":["Header","Layout","Content","Footer","MyLayout","children","dispatch","useDispatch","useEffect","type","className","Title","theme","mode","Item","title","to","style","padding","minHeight","Hangar","columns","dataIndex","key","render","text","row","index","onClick","payload","removeFromHangar","navigate","useNavigate","hangar","useSelector","state","homeBase","view","dataSource","viewEmpty","level","length","withLoading","WrappedComponent","loading","otherProps","avatar","active","withLoadingPeople","component","connect","people","Helper","size","Md5","hashStr","Gravatar","name","alt","src","React","memo","randomNumber","Math","floor","random","randomPerson","list","shallowEqual","width","textAlign","justify","birth_year","gender","height","hair_color","eye_color","skin_color","Squad","removeFromSquad","squad","Home","span","selectSquad","PersonCard","person","isMemberExists","personName","createSelector","squadMembers","filter","m","bordered","display","direction","e","disabled","viewPerson","map","Grid","People","withLoadingStarships","starships","props","colSpan","item","App","basename","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","requestAddToSquad","requestAddToHangar","watchRequestAddToSquad","watchRequestAddToHangar","action","select","foundPerson","p","put","hangarShips","hangarCapacity","hangarMaxCapacity","starshipName","message","error","foundStarship","s","info","takeLatest","baseUrl","SwapiUrls","PEOPLE","PLANETS","FILMS","SPECIES","VEHICLES","STARSHIPS","FetchHelper","url","fetch","res","json","data","results","count","totalPages","ceil","fetchPages","i","push","Promise","all","r","reduce","accumulator","fetchPeopleAsync","watchFetchPeopleStart","call","watchFetchStarships","rootSaga","INITIAL_STATE","peopleReducer","starshipsReducer","squadMax","homeBaseReducer","copySquad","splice","copyHangar","sagaMiddleware","createSagaMiddleware","middlewares","rootReducer","combineReducers","store","createStore","applyMiddleware","run","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e9053793.chunk.js","sourcesContent":["import { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Layout, Menu, Typography } from 'antd';\nimport { useDispatch } from 'react-redux';\nimport { fetchPeopleStart } from '../../redux/people/people.action';\nimport { fetchStarshipsStart } from '../../redux/starships/starships.action';\nimport './MyLayout.css';\n\nconst { Header, Content, Footer } = Layout;\n\nconst MyLayout: React.FC = ({ children }) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchPeopleStart());\n    dispatch(fetchStarshipsStart());\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <Layout className=\"layout\">\n      <Header>\n        <div className=\"logo\">\n          <Typography.Title>SW Manager</Typography.Title>\n        </div>\n        <Menu theme=\"dark\" mode=\"horizontal\">\n          <Menu.Item key=\"home\" title=\"Home\">\n            <Link to=\"/\">Home Base</Link>\n          </Menu.Item>\n          <Menu.Item key=\"people\" title=\"People\">\n            <Link to=\"/people\">People</Link>\n          </Menu.Item>\n          <Menu.Item key=\"starships\" title=\"Starships\">\n            <Link to=\"/starships\">Starships</Link>\n          </Menu.Item>\n        </Menu>\n      </Header>\n      <Content style={{ padding: '0 50px', minHeight: '50px' }}>\n        <div className=\"site-content\">{children}</div>\n      </Content>\n      <Footer>React Kata &copy; 2021</Footer>\n    </Layout>\n  );\n};\n\nexport default MyLayout;\n","export const fetchPeopleStart = () => ({\n  type: 'FETCH_PEOPLE_START',\n});\n\nexport const fetchPeopleSuccess = (list: []) => ({\n  type: 'FETCH_PEOPLE_SUCCESS',\n  payload: list,\n});\n\nexport const fetchPeopleError = (error: any) => ({\n  type: 'FETCH_PEOPLE_ERROR',\n  payload: error,\n});\n","export const fetchStarshipsStart = () => ({\n  type: 'FETCH_STARSHIPS_START',\n});\n\nexport const fetchStarshipsSuccess = (list: []) => ({\n  type: 'FETCH_STARSHIPS_SUCCESS',\n  payload: list,\n});\n\nexport const fetchStarshipsError = (error: any) => ({\n  type: 'FETCH_STARSHIPS_ERROR',\n  payload: error,\n});\n","import { Button, Table, Typography } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { removeFromHangar } from '../../redux/home-base/homeBase.action';\n\nconst Hangar = () => {\n  const dispatch = useDispatch();\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: 'Model',\n      dataIndex: 'model',\n      key: 'model',\n    },\n    {\n      title: 'Max Speed',\n      dataIndex: 'max_atmosphering_speed',\n      key: 'max_atmosphering_speed',\n    },\n    {\n      title: 'Crew',\n      dataIndex: 'crew',\n      key: 'crew',\n    },\n    {\n      title: 'Passengers',\n      dataIndex: 'passengers',\n      key: 'passengers',\n    },\n    {\n      title: 'Remove',\n      dataIndex: 'name',\n      render: (text: any, row: any, index: any) => {\n        return {\n          children: (\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                dispatch(removeFromHangar(index));\n              }}\n            >\n              Remove\n            </Button>\n          ),\n        };\n      },\n    },\n  ];\n\n  const navigate = useNavigate();\n  const hangar = useSelector((state: any) => state.homeBase.hangar);\n  const view = <Table columns={columns} dataSource={hangar} />;\n  const viewEmpty = (\n    <Button type=\"primary\" onClick={() => navigate('/starships')}>\n      Buy Ships\n    </Button>\n  );\n  return (\n    <>\n      <Typography.Title level={3}>Hangar</Typography.Title>\n      {hangar.length === 0 ? viewEmpty : view}\n    </>\n  );\n};\nexport default Hangar;\n","export const addToSquad = (person: any) => ({\n  type: 'ADD_TO_SQUAD',\n  payload: person,\n});\n\nexport const addToHangar = (starship: any) => ({\n  type: 'ADD_TO_HANGAR',\n  payload: starship,\n});\n\nexport const removeFromSquad = (index: number) => ({\n  type: 'REMOVE_FROM_SQUAD',\n  payload: index,\n});\n\nexport const removeFromHangar = (index: number) => ({\n  type: 'REMOVE_FROM_HANGAR',\n  payload: index,\n});\n\nexport const requestAddToSquad = (personName: string) => ({\n  type: 'REQUEST_ADD_TO_SQUAD',\n  payload: personName,\n});\n\nexport const requestAddToHangar = (starShipName: string) => ({\n  type: 'REQUEST_ADD_TO_HANGAR',\n  payload: starShipName,\n});\n\nexport const setHomeBaseError = (error: string) => ({\n  type: 'SET_ERROR',\n  payload: error,\n});\n","import { Skeleton } from 'antd';\n\ninterface IWithLoadingProps {\n  loading: boolean;\n}\nexport const withLoading =\n  (WrappedComponent: React.ComponentType<any>) =>\n  ({ loading, ...otherProps }: IWithLoadingProps) => {\n    if (!WrappedComponent) return null;\n    return (\n      <Skeleton loading={loading} avatar active>\n        <WrappedComponent {...otherProps} />\n      </Skeleton>\n    );\n  };\n","import { connect } from 'react-redux';\nimport { withLoading } from './withLoading';\n\nconst withLoadingPeople = (component: any) => {\n  const mapStateToProps = (state: any) => {\n    return {\n      loading: state.people.loading,\n    };\n  };\n\n  return connect(mapStateToProps)(withLoading(component));\n};\nexport default withLoadingPeople;\n","import { Md5 } from 'ts-md5/dist/md5';\n\nexport const Helper = {\n  getGravatarUrl(key: string, size: number = 100) {\n    return `https://www.gravatar.com/avatar/${Md5.hashStr(\n      key\n    )}?d=identicon&s=${size}`;\n  },\n};\n","import { Avatar } from 'antd';\nimport React from 'react';\n\nimport { Helper } from '../../utils/Helper';\n\ninterface IGravarProps {\n  name: string;\n}\nconst Gravatar: React.FC<IGravarProps> = ({ name }) => {\n  if (name === '') return null;\n  return (\n    <Avatar alt=\"Gravatar\" src={Helper.getGravatarUrl(name, 100)} size={100} />\n  );\n};\nexport default React.memo(Gravatar);\n","import { Card, Row, Col, Typography } from 'antd';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport withLoadingPeople from '../wrapper/withLoadingPeople';\nimport Gravatar from './Gravatar';\n\nconst RandomPerson = () => {\n  const randomNumber = Math.floor(Math.random() * 82);\n  const randomPerson = useSelector(\n    (state: any) => state.people.list[randomNumber],\n    shallowEqual\n  );\n  const view = (\n    <>\n      <Typography.Title level={3}>Featured Person</Typography.Title>\n      <Card\n        title={randomPerson?.name}\n        style={{\n          width: 300,\n          textAlign: 'center',\n        }}\n      >\n        <Row justify=\"center\">\n          <Gravatar name={randomPerson?.name} />\n        </Row>\n        <Row justify=\"space-between\">\n          <Col className=\"row-header\">Birth Year</Col>\n          <Col>{randomPerson?.birth_year}</Col>\n        </Row>\n        <Row justify=\"space-between\">\n          <Col className=\"row-header\">Gender</Col>\n          <Col className=\"title-case\">{randomPerson?.gender}</Col>\n        </Row>\n        <Row justify=\"space-between\">\n          <Col className=\"row-header\">Height</Col>\n          <Col>{randomPerson?.height}</Col>\n        </Row>\n        <Row justify=\"space-between\">\n          <Col className=\"row-header\">Hair Color</Col>\n          <Col>{randomPerson?.hair_color}</Col>\n        </Row>\n\n        <Row justify=\"space-between\">\n          <Col className=\"row-header\">Eye Color</Col>\n          <Col>{randomPerson?.eye_color}</Col>\n        </Row>\n        <Row justify=\"space-between\">\n          <Col className=\"row-header\">Skin Color</Col>\n          <Col>{randomPerson?.skin_color}</Col>\n        </Row>\n      </Card>\n    </>\n  );\n  if (randomPerson) return view;\n  else return null;\n};\nexport default withLoadingPeople(RandomPerson);\n","import { Button, Table, Typography } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { removeFromSquad } from '../../redux/home-base/homeBase.action';\n\nconst Squad = () => {\n  const dispatch = useDispatch();\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: 'Gender',\n      dataIndex: 'gender',\n      key: 'gender',\n    },\n    {\n      title: 'Height',\n      dataIndex: 'height',\n      key: 'height',\n    },\n    {\n      title: 'Birth Year',\n      dataIndex: 'birth_year',\n      key: 'birth_year',\n    },\n    {\n      title: 'Remove',\n      dataIndex: 'name',\n      render: (text: any, row: any, index: any) => {\n        return {\n          children: (\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                dispatch(removeFromSquad(index));\n              }}\n            >\n              Remove\n            </Button>\n          ),\n        };\n      },\n    },\n  ];\n\n  const navigate = useNavigate();\n  const squad = useSelector((state: any) => state.homeBase.squad);\n  const view = <Table columns={columns} dataSource={squad} />;\n  const viewEmpty = (\n    <Button type=\"primary\" onClick={() => navigate('/people')}>\n      Build your Squad\n    </Button>\n  );\n  return (\n    <>\n      <Typography.Title level={3}>Squad Members</Typography.Title>\n      {squad.length === 0 ? viewEmpty : view}\n    </>\n  );\n};\nexport default Squad;\n","import { Col, Row } from 'antd';\nimport Hangar from './widget/Hangar';\nimport RandomPerson from './widget/RandomPerson';\nimport Squad from './widget/Squad';\nconst Home = () => {\n  return (\n    <div>\n      <Row justify=\"space-around\">\n        <Col span={5}>\n          <RandomPerson />\n        </Col>\n        <Col span={8}>\n          <Squad />\n        </Col>\n        <Col span={10}>\n          <Hangar />\n        </Col>\n      </Row>\n    </div>\n  );\n};\nexport default Home;\n","import { createSelector } from 'reselect';\n\nconst selectSquad = (state: any) => state.homeBase.squad;\n\nexport const isMemberAlready = (personName: any) =>\n  createSelector([selectSquad], (squadMembers) => {\n    const foundMember = squadMembers.filter((m: any) => m.name === personName);\n    return foundMember.length > 0;\n  });\n","import { Card, Row, Col, Space, Typography, Button } from 'antd';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { requestAddToSquad } from '../../redux/home-base/homeBase.action';\nimport { isMemberAlready } from '../../redux/home-base/homeBase.selector';\nimport Gravatar from '../widget/Gravatar';\n\nexport interface IPersonCardProps {\n  name: string;\n  height: string;\n  mass: string;\n  hair_color: string;\n  skin_color: string;\n  eye_color: string;\n  birth_year: string;\n  gender: string;\n}\n\nconst PersonCard = (person: IPersonCardProps) => {\n  const isMemberExists = useSelector((state: any) =>\n    isMemberAlready(person?.name)(state)\n  );\n  const dispatch = useDispatch();\n  const handleOnHire = (e: any) => {\n    dispatch(requestAddToSquad(person?.name));\n  };\n  return (\n    <Card\n      bordered={false}\n      style={{\n        width: 300,\n        textAlign: 'center',\n        display: person ? '' : 'none',\n      }}\n    >\n      <Row justify=\"center\">\n        <Space direction=\"vertical\">\n          <Gravatar name={person?.name} />\n          <Typography.Title level={3}>{person?.name}</Typography.Title>\n        </Space>\n      </Row>\n      <Row justify=\"space-between\">\n        <Col className=\"row-header\">Birth Year</Col>\n        <Col>{person?.birth_year}</Col>\n      </Row>\n      <Row justify=\"space-between\">\n        <Col className=\"row-header\">Gender</Col>\n        <Col className=\"title-case\">{person?.gender}</Col>\n      </Row>\n      <Row justify=\"space-between\">\n        <Col className=\"row-header\">Height</Col>\n        <Col>{person?.height}</Col>\n      </Row>\n      <Row justify=\"space-between\">\n        <Col className=\"row-header\">Hair Color</Col>\n        <Col>{person?.hair_color}</Col>\n      </Row>\n\n      <Row justify=\"space-between\">\n        <Col className=\"row-header\">Eye Color</Col>\n        <Col>{person?.eye_color}</Col>\n      </Row>\n      <Row justify=\"space-between\">\n        <Col className=\"row-header\">Skin Color</Col>\n        <Col>{person?.skin_color}</Col>\n      </Row>\n      <Row justify=\"center\">\n        <Button type=\"primary\" onClick={handleOnHire} disabled={isMemberExists}>\n          Hire\n        </Button>\n      </Row>\n    </Card>\n  );\n};\nexport default React.memo(PersonCard);\n","import { shallowEqual, useSelector } from 'react-redux';\nimport { Card } from 'antd';\nimport PersonCard, { IPersonCardProps } from './PersonCard';\nimport withLoadingPeople from '../wrapper/withLoadingPeople';\n\nconst PeopleList = () => {\n  const list: [] = useSelector((state: any) => state.people.list, shallowEqual);\n  const viewPerson = list.map((person: IPersonCardProps, index: number) => (\n    <Card.Grid key={index} style={{ width: '25%', textAlign: 'center' }}>\n      <PersonCard {...person} />\n    </Card.Grid>\n  ));\n\n  return (\n    <div>\n      <Card>{viewPerson}</Card>\n    </div>\n  );\n};\nexport default withLoadingPeople(PeopleList);\n","import PeopleList from './people/PeopleList';\n\nconst People = () => {\n  return (\n    <div>\n      <PeopleList />\n    </div>\n  );\n};\nexport default People;\n","import { Button, Table } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { requestAddToHangar } from '../../redux/home-base/homeBase.action';\nimport withLoadingStarships from '../wrapper/withLoadingStarships';\n\nconst Starships = () => {\n  const dispatch = useDispatch();\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: 'Model',\n      dataIndex: 'model',\n      key: 'model',\n    },\n    {\n      title: 'Manufacturer',\n      dataIndex: 'manufacturer',\n      key: 'manufacturer',\n    },\n    {\n      title: 'Cost in Credits',\n      dataIndex: 'cost_in_credits',\n      key: 'cost_in_credits',\n    },\n    {\n      title: 'Length',\n      dataIndex: 'length',\n      key: 'length',\n    },\n    {\n      title: 'Max Speed',\n      dataIndex: 'max_atmosphering_speed',\n      key: 'max_atmosphering_speed',\n    },\n    {\n      title: 'Crew',\n      dataIndex: 'crew',\n      key: 'crew',\n    },\n    {\n      title: 'Passengers',\n      dataIndex: 'passengers',\n      key: 'passengers',\n    },\n    {\n      title: 'Cargo Capacity',\n      dataIndex: 'cargo_capacity',\n      key: 'cargo_capacity',\n    },\n    {\n      title: 'Consumables',\n      dataIndex: 'consumables',\n      key: 'consumables',\n    },\n    {\n      title: 'Hyperdrive Rating',\n      dataIndex: 'hyperdrive_rating',\n      key: 'hyperdrive_rating',\n    },\n    {\n      title: 'MGLT',\n      dataIndex: 'MGLT',\n      key: 'MGLT',\n    },\n    {\n      title: 'Starship Class',\n      dataIndex: 'starship_class',\n      key: 'starship_class',\n    },\n    {\n      title: 'Add to Hangar',\n      dataIndex: 'name',\n      render: (text: any, row: any, index: any) => {\n        return {\n          children: (\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                const starshipName = text;\n                dispatch(requestAddToHangar(starshipName));\n              }}\n            >\n              Add\n            </Button>\n          ),\n          props: {\n            colSpan: 5,\n          },\n        };\n      },\n    },\n  ];\n\n  const starships = useSelector((state: any) =>\n    // adding key to the list by remapping the array\n    state.starships.list.map((item: any, index: number) => ({\n      ...item,\n      key: index,\n    }))\n  );\n  return <Table columns={columns} dataSource={starships} />;\n};\nexport default withLoadingStarships(Starships);\n","import { connect } from 'react-redux';\nimport { withLoading } from './withLoading';\n\nconst withLoadingStarships = (component: any) => {\n  const mapStateToProps = (state: any) => {\n    return {\n      loading: state.starships.loading,\n    };\n  };\n\n  return connect(mapStateToProps)(withLoading(component));\n};\nexport default withLoadingStarships;\n","import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport MyLayout from './components/layout/MyLayout';\n\nimport 'antd/dist/antd.css';\nimport Home from './components/Home';\nimport People from './components/People';\nimport Starships from './components/starships/StarshipList';\n\nfunction App() {\n  return (\n    <Router basename=\"react-kata\">\n      <MyLayout>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/people\" element={<People />} />\n          <Route path=\"/starships\" element={<Starships />} />\n        </Routes>\n      </MyLayout>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { put, select, takeLatest } from 'redux-saga/effects';\nimport { message } from 'antd';\nimport { addToHangar, addToSquad } from './homeBase.action';\n\n// Worker Functions\nfunction* requestAddToSquad(action: any): Generator<any, any, any> {\n  // select to extract people from state\n  const people = yield select((state: any) => state.people.list);\n  // the triggering request comes with a personName as a payload\n  const foundPerson = people.filter((p: any) => p.name === action.payload);\n  // add the person to squad\n  yield put(addToSquad(foundPerson));\n}\n\nfunction* requestAddToHangar(action: any): Generator<any, any, any> {\n  const starships = yield select((state: any) => state.starships.list);\n  const hangarShips = yield select((state: any) => state.homeBase.hangar);\n  const hangarMaxCapacity = yield select(\n    (state: any) => state.homeBase.hangarCapacity\n  );\n  const starshipName = action.payload;\n\n  if (starshipName === 'Death Star') {\n    message.error('Dream on! Death Star is off limits');\n  } else if (hangarShips.length < hangarMaxCapacity) {\n    const foundStarship = starships.filter((s: any) => s.name === starshipName);\n    yield put(addToHangar(foundStarship));\n    message.info(`Added to hangar: ${starshipName}`);\n  } else {\n    message.error('Hangar is fully occupied');\n  }\n}\n\n// Watcher Functions\nexport function* watchRequestAddToSquad() {\n  // triggering request\n  yield takeLatest('REQUEST_ADD_TO_SQUAD', requestAddToSquad);\n}\n\nexport function* watchRequestAddToHangar() {\n  // triggering request\n  yield takeLatest('REQUEST_ADD_TO_HANGAR', requestAddToHangar);\n}\n","const baseUrl = \"https://swapi.dev/api\";\nexport const SwapiUrls = {\n  PEOPLE: `${baseUrl}/people/`,\n  PLANETS: `${baseUrl}/planets/`,\n  FILMS: `${baseUrl}/films/`,\n  SPECIES: `${baseUrl}/species/`,\n  VEHICLES: `${baseUrl}/vehicles/`,\n  STARSHIPS: `${baseUrl}/starships/`,\n};\n","import { SwapiUrls } from './SwapiUrls';\n\nexport const FetchHelper = {\n  async getAllPeople(): Promise<[] | any> {\n    let people: any[] = [];\n    await fetch(SwapiUrls.PEOPLE)\n      .then((res: Response) => res.json())\n      .then((data: any) => {\n        // first fetch is to get the total number of records and initialize the people array with first page\n        people = data.results;\n        return data.count;\n      })\n      .then((count: number) => {\n        // subsequently, we build an array of fetch function calls to all the remaining page URLs\n        const totalPages = Math.ceil(count / 10);\n        const fetchPages = [];\n        for (let i = 2; i <= totalPages; i++) {\n          fetchPages.push(fetch(`${SwapiUrls.PEOPLE}?page=${i}`));\n        }\n        // Promise all takes a list of promises as an input and resolves them into a single array of results\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all\n        return Promise.all(fetchPages);\n      })\n      .then((results: any) => {\n        return Promise.all(results.map((r: any) => r.json()));\n      })\n      .then((data: any) => {\n        // this section appends all the response results into the existing people array\n        // read more about Array.prototype.reduce()\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce\n        people = data.reduce(\n          (accumulator: any, item: any) => [...accumulator, ...item.results],\n          people\n        );\n      });\n    return people;\n  },\n  async getAll(url: string): Promise<[] | any> {\n    let list: any[] = [];\n    await fetch(url)\n      .then((res: Response) => res.json())\n      .then((data: any) => {\n        list = data.results;\n        return data.count;\n      })\n      .then((count: number) => {\n        const totalPages = Math.ceil(count / 10);\n        const fetchPages = [];\n        for (let i = 2; i <= totalPages; i++) {\n          fetchPages.push(fetch(`${url}?page=${i}`));\n        }\n        return Promise.all(fetchPages);\n      })\n      .then((results: any) => {\n        return Promise.all(results.map((r: any) => r.json()));\n      })\n      .then((data: any) => {\n        list = data.reduce(\n          (accumulator: any, item: any) => [...accumulator, ...item.results],\n          list\n        );\n      });\n    return list;\n  },\n};\n","import { call, put, takeLatest } from 'redux-saga/effects';\nimport { FetchHelper } from '../../services/FetchHelper';\nimport { SwapiUrls } from '../../services/SwapiUrls';\nimport { fetchPeopleError, fetchPeopleSuccess } from './people.action';\n\n// This is a worker function responsible for fetching API and bind data to state if success or bind error if fail\nexport function* fetchPeopleAsync(): Generator<any, any, any> {\n  try {\n    const people = yield call(FetchHelper.getAll, SwapiUrls.PEOPLE);\n    yield put(fetchPeopleSuccess(people));\n  } catch (e: any) {\n    yield put(fetchPeopleError(e));\n  }\n}\n\n// This is a watcher function, once FETCH_PEOPLE_START is received, it will trigger fetchPeopleAsync\nexport function* watchFetchPeopleStart() {\n  yield takeLatest('FETCH_PEOPLE_START', fetchPeopleAsync);\n}\n","import { call, put, takeLatest } from 'redux-saga/effects';\nimport { FetchHelper } from '../../services/FetchHelper';\nimport { SwapiUrls } from '../../services/SwapiUrls';\nimport { fetchStarshipsSuccess, fetchStarshipsError } from './starships.action';\n\nfunction* fetchPeopleAsync(): Generator<any, any, any> {\n  try {\n    const people = yield call(FetchHelper.getAll, SwapiUrls.STARSHIPS);\n    yield put(fetchStarshipsSuccess(people));\n  } catch (e: any) {\n    yield put(fetchStarshipsError(e.message || e));\n  }\n}\n\nexport function* watchFetchStarships() {\n  yield takeLatest('FETCH_STARSHIPS_START', fetchPeopleAsync);\n}\n","import { all, call } from 'redux-saga/effects';\nimport {\n  watchRequestAddToHangar,\n  watchRequestAddToSquad,\n} from './home-base/homeBase.saga';\nimport { watchFetchPeopleStart } from './people/people.saga';\nimport { watchFetchStarships } from './starships/starships.saga';\n\nexport default function* rootSaga() {\n  yield all([\n    call(watchFetchPeopleStart),\n    call(watchFetchStarships),\n    call(watchRequestAddToSquad),\n    call(watchRequestAddToHangar),\n  ]);\n}\n","const INITIAL_STATE = {\n  list: [],\n  loading: false,\n  error: null,\n};\n\nconst peopleReducer = (state = INITIAL_STATE, action: any) => {\n  switch (action.type) {\n    case 'FETCH_PEOPLE_START':\n      return {\n        ...state,\n        loading: true,\n      };\n    case 'FETCH_PEOPLE_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        list: action.payload,\n      };\n    case 'FETCH_PEOPLE_ERROR':\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default peopleReducer;\n","const INITIAL_STATE = {\n  list: [],\n  loading: false,\n  error: null,\n};\n\nconst starshipsReducer = (state = INITIAL_STATE, action: any) => {\n  switch (action.type) {\n    case 'FETCH_STARSHIPS_START':\n      return {\n        ...state,\n        loading: true,\n      };\n    case 'FETCH_STARSHIPS_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        list: action.payload,\n      };\n    case 'FETCH_STARSHIPS_ERROR':\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default starshipsReducer;\n","const INITIAL_STATE = {\n  squad: [],\n  squadMax: 10,\n  hangar: [],\n  hangarCapacity: 10,\n};\n\nconst homeBaseReducer = (state = INITIAL_STATE, action: any) => {\n  switch (action.type) {\n    case 'ADD_TO_SQUAD':\n      return {\n        ...state,\n        squad:\n          state.squad.length < state.squadMax\n            ? [...state.squad, ...action.payload]\n            : state.squad,\n      };\n    case 'ADD_TO_HANGAR':\n      return {\n        ...state,\n        hangar:\n          state.hangar.length < state.hangarCapacity\n            ? [...state.hangar, ...action.payload]\n            : state.hangar,\n      };\n    case 'REMOVE_FROM_SQUAD':\n      // create copy of the state and remove the indexed item from it\n      const copySquad = [...state.squad];\n      copySquad.splice(action.payload, 1);\n\n      return {\n        ...state,\n        squad: copySquad,\n      };\n    case 'REMOVE_FROM_HANGAR':\n      const copyHangar = [...state.hangar];\n      copyHangar.splice(action.payload, 1);\n\n      return {\n        ...state,\n        hangar: copyHangar,\n      };\n    case 'SET_ERROR_HOMEBASE':\n      return {\n        ...state,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\nexport default homeBaseReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './root-saga';\nimport peopleReducer from './people/people.reducer';\nimport starshipsReducer from './starships/starships.reducer';\nimport homeBaseReducer from './home-base/homeBase.reducer';\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares: any = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nconst rootReducer = combineReducers({\n  people: peopleReducer,\n  starships: starshipsReducer,\n  homeBase: homeBaseReducer,\n});\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(rootSaga);\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}