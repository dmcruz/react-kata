{"version":3,"sources":["components/layout/MyLayout.tsx","redux/people/people.action.ts","redux/starships/starships.action.ts","components/wrapper/withLoading.tsx","components/wrapper/withLoadingPeople.tsx","utils/Helper.ts","components/widget/Gravatar.tsx","components/widget/RandomPerson.tsx","components/Home.tsx","components/people/PersonCard.tsx","components/people/PeopleList.tsx","components/People.tsx","components/starships/StarshipList.tsx","components/wrapper/withLoadingStarships.tsx","App.tsx","reportWebVitals.ts","services/SwapiUrls.ts","services/FetchHelper.ts","redux/people/people.saga.ts","redux/starships/starships.saga.ts","redux/root-saga.ts","redux/people/people.reducer.ts","redux/starships/starships.reducer.ts","redux/store.ts","index.tsx"],"names":["Header","Layout","Content","Footer","MyLayout","children","dispatch","useDispatch","useEffect","type","className","Title","theme","mode","Item","title","to","style","padding","minHeight","withLoading","WrappedComponent","loading","otherProps","avatar","active","withLoadingPeople","component","connect","state","people","Helper","key","size","Md5","hashStr","Gravatar","name","alt","src","React","memo","randomNumber","Math","floor","random","randomPerson","useSelector","list","shallowEqual","view","level","width","textAlign","justify","birth_year","gender","height","hair_color","eye_color","skin_color","Home","span","PersonCard","person","bordered","display","direction","viewPerson","map","index","Grid","People","columns","dataIndex","withLoadingStarships","starships","item","dataSource","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","baseUrl","SwapiUrls","PEOPLE","PLANETS","FILMS","SPECIES","VEHICLES","STARSHIPS","FetchHelper","url","fetch","res","json","data","results","count","totalPages","ceil","fetchPages","i","push","Promise","all","r","reduce","accumulator","fetchPeopleAsync","watchFetchPeopleStart","call","put","payload","takeLatest","watchFetchStarships","message","rootSaga","INITIAL_STATE","error","peopleReducer","action","starshipsReducer","sagaMiddleware","createSagaMiddleware","middlewares","rootReducer","combineReducers","store","createStore","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a951078a.chunk.js","sourcesContent":["import { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Layout, Menu, Typography } from 'antd';\nimport { useDispatch } from 'react-redux';\nimport { fetchPeopleStart } from '../../redux/people/people.action';\nimport { fetchStarshipsStart } from '../../redux/starships/starships.action';\nimport './MyLayout.css';\n\nconst { Header, Content, Footer } = Layout;\n\nconst MyLayout: React.FC = ({ children }) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchPeopleStart());\n    dispatch(fetchStarshipsStart());\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <Layout className=\"layout\">\n      <Header>\n        <div className=\"logo\">\n          <Typography.Title>SW Manager</Typography.Title>\n        </div>\n        <Menu theme=\"dark\" mode=\"horizontal\">\n          <Menu.Item key=\"home\" title=\"Home\">\n            <Link to=\"/\">Home Base</Link>\n          </Menu.Item>\n          <Menu.Item key=\"people\" title=\"People\">\n            <Link to=\"/people\">People</Link>\n          </Menu.Item>\n          <Menu.Item key=\"starships\" title=\"Starships\">\n            <Link to=\"/starships\">Starships</Link>\n          </Menu.Item>\n        </Menu>\n      </Header>\n      <Content style={{ padding: '0 50px', minHeight: '50px' }}>\n        <div className=\"site-content\">{children}</div>\n      </Content>\n      <Footer>React Kata &copy; 2021</Footer>\n    </Layout>\n  );\n};\n\nexport default MyLayout;\n","export const fetchPeopleStart = () => ({\n  type: 'FETCH_PEOPLE_START',\n});\n\nexport const fetchPeopleSuccess = (list: []) => ({\n  type: 'FETCH_PEOPLE_SUCCESS',\n  payload: list,\n});\n\nexport const fetchPeopleError = (error: any) => ({\n  type: 'FETCH_PEOPLE_ERROR',\n  payload: error,\n});\n","export const fetchStarshipsStart = () => ({\n  type: 'FETCH_STARSHIPS_START',\n});\n\nexport const fetchStarshipsSuccess = (list: []) => ({\n  type: 'FETCH_STARSHIPS_SUCCESS',\n  payload: list,\n});\n\nexport const fetchStarshipsError = (error: any) => ({\n  type: 'FETCH_STARSHIPS_ERROR',\n  payload: error,\n});\n","import { Skeleton } from 'antd';\n\ninterface IWithLoadingProps {\n  loading: boolean;\n}\nexport const withLoading =\n  (WrappedComponent: React.ComponentType<any>) =>\n  ({ loading, ...otherProps }: IWithLoadingProps) => {\n    if (!WrappedComponent) return null;\n    return (\n      <Skeleton loading={loading} avatar active>\n        <WrappedComponent {...otherProps} />\n      </Skeleton>\n    );\n  };\n","import { connect } from 'react-redux';\nimport { withLoading } from './withLoading';\n\nconst withLoadingPeople = (component: any) => {\n  const mapStateToProps = (state: any) => {\n    return {\n      loading: state.people.loading,\n    };\n  };\n\n  return connect(mapStateToProps)(withLoading(component));\n};\nexport default withLoadingPeople;\n","import { Md5 } from 'ts-md5/dist/md5';\n\nexport const Helper = {\n  getGravatarUrl(key: string, size: number = 100) {\n    return `https://www.gravatar.com/avatar/${Md5.hashStr(\n      key\n    )}?d=identicon&s=${size}`;\n  },\n};\n","import { Avatar } from 'antd';\nimport React from 'react';\n\nimport { Helper } from '../../utils/Helper';\n\ninterface IGravarProps {\n  name: string;\n}\nconst Gravatar: React.FC<IGravarProps> = ({ name }) => {\n  if (name === '') return null;\n  return (\n    <Avatar alt=\"Gravatar\" src={Helper.getGravatarUrl(name, 100)} size={100} />\n  );\n};\nexport default React.memo(Gravatar);\n","import { Card, Row, Col, Typography } from 'antd';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport withLoadingPeople from '../wrapper/withLoadingPeople';\nimport Gravatar from './Gravatar';\n\nconst RandomPerson = () => {\n  const randomNumber = Math.floor(Math.random() * 82);\n  const randomPerson = useSelector(\n    (state: any) => state.people.list[randomNumber],\n    shallowEqual\n  );\n  const view = (\n    <>\n      <Typography.Title level={3}>Featured Person</Typography.Title>\n      <Card\n        title={randomPerson?.name}\n        style={{\n          width: 300,\n          textAlign: 'center',\n        }}\n      >\n        <Row justify=\"center\">\n          <Gravatar name={randomPerson?.name} />\n        </Row>\n        <Row justify=\"space-between\">\n          <Col className=\"row-header\">Birth Year</Col>\n          <Col>{randomPerson?.birth_year}</Col>\n        </Row>\n        <Row justify=\"space-between\">\n          <Col className=\"row-header\">Gender</Col>\n          <Col className=\"title-case\">{randomPerson?.gender}</Col>\n        </Row>\n        <Row justify=\"space-between\">\n          <Col className=\"row-header\">Height</Col>\n          <Col>{randomPerson?.height}</Col>\n        </Row>\n        <Row justify=\"space-between\">\n          <Col className=\"row-header\">Hair Color</Col>\n          <Col>{randomPerson?.hair_color}</Col>\n        </Row>\n\n        <Row justify=\"space-between\">\n          <Col className=\"row-header\">Eye Color</Col>\n          <Col>{randomPerson?.eye_color}</Col>\n        </Row>\n        <Row justify=\"space-between\">\n          <Col className=\"row-header\">Skin Color</Col>\n          <Col>{randomPerson?.skin_color}</Col>\n        </Row>\n      </Card>\n    </>\n  );\n  if (randomPerson) return view;\n  else return null;\n};\nexport default withLoadingPeople(RandomPerson);\n","import { Col, Row } from 'antd';\nimport RandomPerson from './widget/RandomPerson';\nconst Home = () => {\n  return (\n    <div>\n      <Row>\n        <Col span={8}>\n          <RandomPerson />\n        </Col>\n        <Col span={8}></Col>\n        <Col span={8}></Col>\n      </Row>\n    </div>\n  );\n};\nexport default Home;\n","import { Card, Row, Col, Space, Typography } from 'antd';\nimport React from 'react';\nimport Gravatar from '../widget/Gravatar';\n\nexport interface IPersonCardProps {\n  name: string;\n  height: string;\n  mass: string;\n  hair_color: string;\n  skin_color: string;\n  eye_color: string;\n  birth_year: string;\n  gender: string;\n}\n\nconst PersonCard = (person: IPersonCardProps) => {\n  return (\n    <Card\n      bordered={false}\n      style={{\n        width: 300,\n        textAlign: 'center',\n        display: person ? '' : 'none',\n      }}\n    >\n      <Row justify=\"center\">\n        <Space direction=\"vertical\">\n          <Gravatar name={person?.name} />\n          <Typography.Title level={3}>{person?.name}</Typography.Title>\n        </Space>\n      </Row>\n      <Row justify=\"space-between\">\n        <Col className=\"row-header\">Birth Year</Col>\n        <Col>{person?.birth_year}</Col>\n      </Row>\n      <Row justify=\"space-between\">\n        <Col className=\"row-header\">Gender</Col>\n        <Col className=\"title-case\">{person?.gender}</Col>\n      </Row>\n      <Row justify=\"space-between\">\n        <Col className=\"row-header\">Height</Col>\n        <Col>{person?.height}</Col>\n      </Row>\n      <Row justify=\"space-between\">\n        <Col className=\"row-header\">Hair Color</Col>\n        <Col>{person?.hair_color}</Col>\n      </Row>\n\n      <Row justify=\"space-between\">\n        <Col className=\"row-header\">Eye Color</Col>\n        <Col>{person?.eye_color}</Col>\n      </Row>\n      <Row justify=\"space-between\">\n        <Col className=\"row-header\">Skin Color</Col>\n        <Col>{person?.skin_color}</Col>\n      </Row>\n    </Card>\n  );\n};\nexport default React.memo(PersonCard);\n","import { shallowEqual, useSelector } from 'react-redux';\nimport { Card } from 'antd';\nimport PersonCard, { IPersonCardProps } from './PersonCard';\nimport withLoadingPeople from '../wrapper/withLoadingPeople';\n\nconst PeopleList = () => {\n  const list: [] = useSelector((state: any) => state.people.list, shallowEqual);\n  const viewPerson = list.map((person: IPersonCardProps, index: number) => (\n    <Card.Grid key={index} style={{ width: '25%', textAlign: 'center' }}>\n      <PersonCard {...person} />\n    </Card.Grid>\n  ));\n\n  return (\n    <div>\n      <Card>{viewPerson}</Card>\n    </div>\n  );\n};\nexport default withLoadingPeople(PeopleList);\n","import PeopleList from './people/PeopleList';\n\nconst People = () => {\n  return (\n    <div>\n      <PeopleList />\n    </div>\n  );\n};\nexport default People;\n","import { Table } from 'antd';\nimport { useSelector } from 'react-redux';\nimport withLoadingStarships from '../wrapper/withLoadingStarships';\n\nconst columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n  },\n  {\n    title: 'Model',\n    dataIndex: 'model',\n    key: 'model',\n  },\n  {\n    title: 'Manufacturer',\n    dataIndex: 'manufacturer',\n    key: 'manufacturer',\n  },\n  {\n    title: 'Cost in Credits',\n    dataIndex: 'cost_in_credits',\n    key: 'cost_in_credits',\n  },\n  {\n    title: 'Length',\n    dataIndex: 'length',\n    key: 'length',\n  },\n  {\n    title: 'Max Speed',\n    dataIndex: 'max_atmosphering_speed',\n    key: 'max_atmosphering_speed',\n  },\n  {\n    title: 'Crew',\n    dataIndex: 'crew',\n    key: 'crew',\n  },\n  {\n    title: 'Passengers',\n    dataIndex: 'passengers',\n    key: 'passengers',\n  },\n  {\n    title: 'Cargo Capacity',\n    dataIndex: 'cargo_capacity',\n    key: 'cargo_capacity',\n  },\n  {\n    title: 'Consumables',\n    dataIndex: 'consumables',\n    key: 'consumables',\n  },\n  {\n    title: 'Hyperdrive Rating',\n    dataIndex: 'hyperdrive_rating',\n    key: 'hyperdrive_rating',\n  },\n  {\n    title: 'MGLT',\n    dataIndex: 'MGLT',\n    key: 'MGLT',\n  },\n  {\n    title: 'Starship Class',\n    dataIndex: 'starship_class',\n    key: 'starship_class',\n  },\n];\n\nconst Starships = () => {\n  const starships = useSelector((state: any) =>\n    // adding key to the list by remapping the array\n    state.starships.list.map((item: any, index: number) => ({\n      ...item,\n      key: index,\n    }))\n  );\n  return <Table columns={columns} dataSource={starships} />;\n};\nexport default withLoadingStarships(Starships);\n","import { connect } from 'react-redux';\nimport { withLoading } from './withLoading';\n\nconst withLoadingStarships = (component: any) => {\n  const mapStateToProps = (state: any) => {\n    return {\n      loading: state.starships.loading,\n    };\n  };\n\n  return connect(mapStateToProps)(withLoading(component));\n};\nexport default withLoadingStarships;\n","import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport MyLayout from './components/layout/MyLayout';\n\nimport 'antd/dist/antd.css';\nimport Home from './components/Home';\nimport People from './components/People';\nimport Starships from './components/starships/StarshipList';\n\nfunction App() {\n  return (\n    <Router>\n      <MyLayout>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/people\" element={<People />} />\n          <Route path=\"/starships\" element={<Starships />} />\n        </Routes>\n      </MyLayout>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const baseUrl = \"https://swapi.dev/api\";\nexport const SwapiUrls = {\n  PEOPLE: `${baseUrl}/people/`,\n  PLANETS: `${baseUrl}/planets/`,\n  FILMS: `${baseUrl}/films/`,\n  SPECIES: `${baseUrl}/species/`,\n  VEHICLES: `${baseUrl}/vehicles/`,\n  STARSHIPS: `${baseUrl}/starships/`,\n};\n","import { SwapiUrls } from './SwapiUrls';\n\nexport const FetchHelper = {\n  async getAllPeople(): Promise<[] | any> {\n    let people: any[] = [];\n    await fetch(SwapiUrls.PEOPLE)\n      .then((res: Response) => res.json())\n      .then((data: any) => {\n        // first fetch is to get the total number of records and initialize the people array with first page\n        people = data.results;\n        return data.count;\n      })\n      .then((count: number) => {\n        // subsequently, we build an array of fetch function calls to all the remaining page URLs\n        const totalPages = Math.ceil(count / 10);\n        const fetchPages = [];\n        for (let i = 2; i <= totalPages; i++) {\n          fetchPages.push(fetch(`${SwapiUrls.PEOPLE}?page=${i}`));\n        }\n        // Promise all takes a list of promises as an input and resolves them into a single array of results\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all\n        return Promise.all(fetchPages);\n      })\n      .then((results: any) => {\n        return Promise.all(results.map((r: any) => r.json()));\n      })\n      .then((data: any) => {\n        // this section appends all the response results into the existing people array\n        // read more about Array.prototype.reduce()\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce\n        people = data.reduce(\n          (accumulator: any, item: any) => [...accumulator, ...item.results],\n          people\n        );\n      });\n    return people;\n  },\n  async getAll(url: string): Promise<[] | any> {\n    let list: any[] = [];\n    await fetch(url)\n      .then((res: Response) => res.json())\n      .then((data: any) => {\n        list = data.results;\n        return data.count;\n      })\n      .then((count: number) => {\n        const totalPages = Math.ceil(count / 10);\n        const fetchPages = [];\n        for (let i = 2; i <= totalPages; i++) {\n          fetchPages.push(fetch(`${url}?page=${i}`));\n        }\n        return Promise.all(fetchPages);\n      })\n      .then((results: any) => {\n        return Promise.all(results.map((r: any) => r.json()));\n      })\n      .then((data: any) => {\n        list = data.reduce(\n          (accumulator: any, item: any) => [...accumulator, ...item.results],\n          list\n        );\n      });\n    return list;\n  },\n};\n","import { call, put, takeLatest } from 'redux-saga/effects';\nimport { FetchHelper } from '../../services/FetchHelper';\nimport { SwapiUrls } from '../../services/SwapiUrls';\nimport { fetchPeopleError, fetchPeopleSuccess } from './people.action';\n\n// This is a worker function responsible for fetching API and bind data to state if success or bind error if fail\nexport function* fetchPeopleAsync(): Generator<any, any, any> {\n  try {\n    const people = yield call(FetchHelper.getAll, SwapiUrls.PEOPLE);\n    yield put(fetchPeopleSuccess(people));\n  } catch (e: any) {\n    yield put(fetchPeopleError(e));\n  }\n}\n\n// This is a watcher function, once FETCH_PEOPLE_START is received, it will trigger fetchPeopleAsync\nexport function* watchFetchPeopleStart() {\n  yield takeLatest('FETCH_PEOPLE_START', fetchPeopleAsync);\n}\n","import { call, put, takeLatest } from 'redux-saga/effects';\nimport { FetchHelper } from '../../services/FetchHelper';\nimport { SwapiUrls } from '../../services/SwapiUrls';\nimport { fetchStarshipsSuccess, fetchStarshipsError } from './starships.action';\n\nfunction* fetchPeopleAsync(): Generator<any, any, any> {\n  try {\n    const people = yield call(FetchHelper.getAll, SwapiUrls.STARSHIPS);\n    yield put(fetchStarshipsSuccess(people));\n  } catch (e: any) {\n    yield put(fetchStarshipsError(e.message || e));\n  }\n}\n\nexport function* watchFetchStarships() {\n  yield takeLatest('FETCH_STARSHIPS_START', fetchPeopleAsync);\n}\n","import { all, call } from 'redux-saga/effects';\nimport { watchFetchPeopleStart } from './people/people.saga';\nimport { watchFetchStarships } from './starships/starships.saga';\n\nexport default function* rootSaga() {\n  yield all([call(watchFetchPeopleStart), call(watchFetchStarships)]);\n}\n","const INITIAL_STATE = {\n  list: [],\n  loading: false,\n  error: null,\n};\n\nconst peopleReducer = (state = INITIAL_STATE, action: any) => {\n  switch (action.type) {\n    case 'FETCH_PEOPLE_START':\n      return {\n        ...state,\n        loading: true,\n      };\n    case 'FETCH_PEOPLE_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        list: action.payload,\n      };\n    case 'FETCH_PEOPLE_ERROR':\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default peopleReducer;\n","const INITIAL_STATE = {\n  list: [],\n  loading: false,\n  error: null,\n};\n\nconst starshipsReducer = (state = INITIAL_STATE, action: any) => {\n  switch (action.type) {\n    case 'FETCH_STARSHIPS_START':\n      return {\n        ...state,\n        loading: true,\n      };\n    case 'FETCH_STARSHIPS_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        list: action.payload,\n      };\n    case 'FETCH_STARSHIPS_ERROR':\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default starshipsReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './root-saga';\nimport peopleReducer from './people/people.reducer';\nimport starshipsReducer from './starships/starships.reducer';\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares: any = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nconst rootReducer = combineReducers({\n  people: peopleReducer,\n  starships: starshipsReducer,\n});\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(rootSaga);\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}