{"version":3,"sources":["components/layout/MyLayout.tsx","redux/people/people.action.ts","redux/starships/starships.action.ts","components/widget/CaptainModal.tsx","redux/home-base/homeBase.action.ts","components/widget/Hangar.tsx","components/wrapper/withLoading.tsx","components/wrapper/withLoadingPeople.tsx","utils/Helper.ts","components/widget/Gravatar.tsx","components/widget/RandomPerson.tsx","components/wrapper/withLoadingStarships.tsx","components/widget/Identicon.tsx","components/widget/RandomStarship.tsx","components/widget/Squad.tsx","components/Home.tsx","redux/home-base/homeBase.selector.ts","components/people/PersonCard.tsx","components/people/PeopleList.tsx","components/People.tsx","components/starships/StarshipList.tsx","App.tsx","reportWebVitals.ts","redux/home-base/homeBase.reducer.ts","redux/people/people.reducer.ts","redux/starships/starships.reducer.ts","redux/root-reducer.ts","redux/home-base/homeBase.saga.ts","services/SwapiUrls.ts","services/FetchHelper.ts","redux/people/people.saga.ts","redux/starships/starships.saga.ts","redux/root-saga.ts","redux/store.ts","index.tsx"],"names":["Header","Layout","Content","Footer","MyLayout","children","dispatch","useDispatch","useEffect","type","className","Title","theme","mode","Item","title","to","style","padding","minHeight","CaptainModal","useState","name","setName","isModalVisible","useSelector","state","homeBase","visible","onOk","payload","setCaptain","onCancel","destroyOnClose","autoFocus","onChange","e","target","value","Hangar","columns","dataIndex","key","render","text","row","index","onClick","removeFromHangar","navigate","useNavigate","hangar","view","dataSource","viewEmpty","level","length","withLoading","WrappedComponent","loading","otherProps","avatar","active","withLoadingPeople","component","connect","people","Helper","size","Md5","hashStr","id","num","Math","round","Gravatar","alt","src","React","memo","randomNumber","floor","random","randomPerson","list","shallowEqual","width","textAlign","justify","birth_year","gender","height","hair_color","eye_color","skin_color","withLoadingStarships","starships","Identicon","props","DATA","SET_DATA","SQUARE","fillBlock","x","y","color","ctx","beginPath","rect","fillStyle","join","fill","genColor","rgb","i","val","parseInt","minEnforced","max","maxEnforced","min","push","canvasRef","useRef","context","current","getContext","ceil","GRID","position","FILL_CHANCE","generateIdenticon","ref","randomStarship","model","manufacturer","cost_in_credits","crew","passengers","cargo_capacity","consumables","allowHalf","parseFloat","hyperdrive_rating","Squad","removeFromSquad","squad","Home","captainName","captain","cursor","span","lg","xl","xxl","flex","selectSquad","PersonCard","person","isMemberExists","personName","createSelector","squadMembers","filter","m","bordered","display","direction","disabled","viewPerson","map","Grid","People","align","App","basename","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","squadMax","hangarCapacity","homeBaseReducer","action","copySquad","splice","copyHangar","error","peopleReducer","starshipsReducer","rootReducer","combineReducers","requestAddToSquad","requestAddToHangar","watchRequestAddToSquad","watchRequestAddToHangar","select","foundPerson","p","put","hangarShips","hangarMaxCapacity","starshipName","message","foundStarship","s","info","takeLatest","baseUrl","SwapiUrls","PEOPLE","PLANETS","FILMS","SPECIES","VEHICLES","STARSHIPS","FetchHelper","url","fetch","res","json","data","results","count","totalPages","fetchPages","Promise","all","r","reduce","accumulator","item","fetchPeopleAsync","watchFetchPeopleStart","call","watchFetchStarships","rootSaga","sagaMiddleware","createSagaMiddleware","middlewares","store","createStore","applyMiddleware","run","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.91be2fdf.chunk.js","sourcesContent":["import { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Layout, Menu, Typography } from 'antd';\nimport { useDispatch } from 'react-redux';\nimport { fetchPeopleStart } from '../../redux/people/people.action';\nimport { fetchStarshipsStart } from '../../redux/starships/starships.action';\nimport './MyLayout.css';\n\nconst { Header, Content, Footer } = Layout;\n\nconst MyLayout: React.FC = ({ children }) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchPeopleStart());\n    dispatch(fetchStarshipsStart());\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <Layout className=\"layout\">\n      <Header>\n        <div className=\"logo\">\n          <Typography.Title>SW Manager</Typography.Title>\n        </div>\n        <Menu theme=\"dark\" mode=\"horizontal\">\n          <Menu.Item key=\"home\" title=\"Home\">\n            <Link to=\"/\">Home Base</Link>\n          </Menu.Item>\n          <Menu.Item key=\"people\" title=\"People\">\n            <Link to=\"/people\">People</Link>\n          </Menu.Item>\n          <Menu.Item key=\"starships\" title=\"Starships\">\n            <Link to=\"/starships\">Starships</Link>\n          </Menu.Item>\n        </Menu>\n      </Header>\n      <Content style={{ padding: '0 50px', minHeight: '50px' }}>\n        <div className=\"site-content\">{children}</div>\n      </Content>\n      <Footer>React Kata &copy; 2021</Footer>\n    </Layout>\n  );\n};\n\nexport default MyLayout;\n","import { PersonData } from './people.types';\n\nexport const fetchPeopleStart = () => ({\n  type: 'FETCH_PEOPLE_START',\n});\n\nexport const fetchPeopleSuccess = (list: Array<PersonData>) => ({\n  type: 'FETCH_PEOPLE_SUCCESS',\n  payload: list,\n});\n\nexport const fetchPeopleError = (error: any) => ({\n  type: 'FETCH_PEOPLE_ERROR',\n  payload: error,\n});\n","export const fetchStarshipsStart = () => ({\n  type: 'FETCH_STARSHIPS_START',\n});\n\nexport const fetchStarshipsSuccess = (list: []) => ({\n  type: 'FETCH_STARSHIPS_SUCCESS',\n  payload: list,\n});\n\nexport const fetchStarshipsError = (error: any) => ({\n  type: 'FETCH_STARSHIPS_ERROR',\n  payload: error,\n});\n","import { Input, Modal } from 'antd';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setCaptain } from '../../redux/home-base/homeBase.action';\nimport { IAppRootState } from '../../redux/root-reducer.type';\n\nconst CaptainModal = () => {\n  const [name, setName] = useState('Captain');\n  const dispatch = useDispatch();\n  const isModalVisible = useSelector<IAppRootState, boolean>(\n    (state) => state.homeBase.isModalVisible\n  );\n\n  const handleOk = () => {\n    dispatch(setCaptain(name));\n  };\n  const handleCancel = () => {\n    // another way of dispatching changes to reducer where we don't use an action creator\n    dispatch({ type: 'SET_MODAL_VISIBLE', payload: false });\n  };\n  return (\n    <Modal\n      title=\"Captain's Name\"\n      visible={isModalVisible}\n      onOk={handleOk}\n      onCancel={handleCancel}\n      destroyOnClose={true}\n    >\n      <Input\n        autoFocus\n        type=\"text\"\n        onChange={(e: any) => setName(e.target.value)}\n      ></Input>\n    </Modal>\n  );\n};\nexport default CaptainModal;\n","export const setCaptain = (name: string) => ({\n  type: 'SET_CAPTAIN',\n  payload: name,\n});\nexport const addToSquad = (person: any) => ({\n  type: 'ADD_TO_SQUAD',\n  payload: person,\n});\n\nexport const addToHangar = (starship: any) => ({\n  type: 'ADD_TO_HANGAR',\n  payload: starship,\n});\n\nexport const removeFromSquad = (index: number) => ({\n  type: 'REMOVE_FROM_SQUAD',\n  payload: index,\n});\n\nexport const removeFromHangar = (index: number) => ({\n  type: 'REMOVE_FROM_HANGAR',\n  payload: index,\n});\n\nexport const requestAddToSquad = (personName: string) => ({\n  type: 'REQUEST_ADD_TO_SQUAD',\n  payload: personName,\n});\n\nexport const requestAddToHangar = (starShipName: string) => ({\n  type: 'REQUEST_ADD_TO_HANGAR',\n  payload: starShipName,\n});\n","import { Button, Table, Typography } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { removeFromHangar } from '../../redux/home-base/homeBase.action';\nimport { IAppRootState } from '../../redux/root-reducer.type';\nimport { StarshipData } from '../../redux/starships/starships.types';\n\nconst Hangar = () => {\n  const dispatch = useDispatch();\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: 'Model',\n      dataIndex: 'model',\n      key: 'model',\n    },\n    {\n      title: 'Max Speed',\n      dataIndex: 'max_atmosphering_speed',\n      key: 'max_atmosphering_speed',\n    },\n    {\n      title: 'Crew',\n      dataIndex: 'crew',\n      key: 'crew',\n    },\n    {\n      title: 'Passengers',\n      dataIndex: 'passengers',\n      key: 'passengers',\n    },\n    {\n      title: 'Remove',\n      dataIndex: 'name',\n      render: (text: any, row: any, index: any) => {\n        return {\n          children: (\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                dispatch(removeFromHangar(index));\n              }}\n            >\n              Remove\n            </Button>\n          ),\n        };\n      },\n    },\n  ];\n\n  const navigate = useNavigate();\n  const hangar = useSelector<IAppRootState, StarshipData[]>(\n    (state) => state.homeBase.hangar\n  );\n  const view = <Table columns={columns} dataSource={hangar} />;\n  const viewEmpty = (\n    <Button type=\"primary\" onClick={() => navigate('/starships')}>\n      Buy Ships\n    </Button>\n  );\n  return (\n    <>\n      <Typography.Title level={3}>Hangar</Typography.Title>\n      {hangar.length === 0 ? viewEmpty : view}\n    </>\n  );\n};\nexport default Hangar;\n","import { Skeleton } from 'antd';\n\ninterface IWithLoadingProps {\n  loading: boolean;\n}\nexport const withLoading =\n  (WrappedComponent: React.ComponentType<any>) =>\n  ({ loading, ...otherProps }: IWithLoadingProps) => {\n    if (!WrappedComponent) return null;\n    return (\n      <Skeleton loading={loading} avatar active>\n        <WrappedComponent {...otherProps} />\n      </Skeleton>\n    );\n  };\n","import { connect } from 'react-redux';\nimport { withLoading } from './withLoading';\n\nconst withLoadingPeople = (component: any) => {\n  const mapStateToProps = (state: any) => {\n    return {\n      loading: state.people.loading,\n    };\n  };\n\n  return connect(mapStateToProps)(withLoading(component));\n};\nexport default withLoadingPeople;\n","import { Md5 } from 'ts-md5/dist/md5';\n\nexport const Helper = {\n  getGravatarUrl(key: string, size: number = 100) {\n    return `https://www.gravatar.com/avatar/${Md5.hashStr(\n      key\n    )}?d=identicon&s=${size}`;\n  },\n  getHash(id: string) {\n    return Md5.hashStr(id);\n  },\n  roundNearestHalf(num: number) {\n    return Math.round(num * 2) / 2;\n  },\n};\n","import { Avatar } from 'antd';\nimport React from 'react';\n\nimport { Helper } from '../../utils/Helper';\n\ninterface IGravarProps {\n  name: string;\n}\nconst Gravatar: React.FC<IGravarProps> = ({ name }) => {\n  if (name === '') return null;\n  return (\n    <Avatar alt=\"Gravatar\" src={Helper.getGravatarUrl(name, 100)} size={100} />\n  );\n};\nexport default React.memo(Gravatar);\n","import { Card, Row, Col, Typography } from 'antd';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { PersonData } from '../../redux/people/people.types';\nimport { IAppRootState } from '../../redux/root-reducer.type';\nimport withLoadingPeople from '../wrapper/withLoadingPeople';\nimport Gravatar from './Gravatar';\n\nconst RandomPerson = () => {\n  const randomNumber = Math.floor(Math.random() * 82);\n  const randomPerson = useSelector<IAppRootState, PersonData>(\n    (state) => state.people.list[randomNumber],\n    shallowEqual\n  );\n  const view = (\n    <>\n      <Typography.Title level={3}>Featured Person</Typography.Title>\n      <Card\n        title={randomPerson?.name}\n        style={{\n          width: 300,\n          textAlign: 'center',\n        }}\n      >\n        <Row justify=\"center\">\n          <Gravatar name={randomPerson?.name} />\n        </Row>\n        <Row justify=\"space-between\">\n          <Col className=\"row-header\">Birth Year</Col>\n          <Col>{randomPerson?.birth_year}</Col>\n        </Row>\n        <Row justify=\"space-between\">\n          <Col className=\"row-header\">Gender</Col>\n          <Col className=\"title-case\">{randomPerson?.gender}</Col>\n        </Row>\n        <Row justify=\"space-between\">\n          <Col className=\"row-header\">Height</Col>\n          <Col>{randomPerson?.height}</Col>\n        </Row>\n        <Row justify=\"space-between\">\n          <Col className=\"row-header\">Hair Color</Col>\n          <Col>{randomPerson?.hair_color}</Col>\n        </Row>\n\n        <Row justify=\"space-between\">\n          <Col className=\"row-header\">Eye Color</Col>\n          <Col>{randomPerson?.eye_color}</Col>\n        </Row>\n        <Row justify=\"space-between\">\n          <Col className=\"row-header\">Skin Color</Col>\n          <Col>{randomPerson?.skin_color}</Col>\n        </Row>\n      </Card>\n    </>\n  );\n  if (randomPerson) return view;\n  else return null;\n};\nexport default withLoadingPeople(RandomPerson);\n","import { connect } from 'react-redux';\nimport { withLoading } from './withLoading';\n\nconst withLoadingStarships = (component: any) => {\n  const mapStateToProps = (state: any) => {\n    return {\n      loading: state.starships.loading,\n    };\n  };\n\n  return connect(mapStateToProps)(withLoading(component));\n};\nexport default withLoadingStarships;\n","import React from 'react';\nimport { useRef, useEffect, useState } from 'react';\nimport { Helper } from '../../utils/Helper';\n\n// ported to React\n// source: https://gist.github.com/richardkundl/9071847\nconst Identicon = (props: any) => {\n  // Generated content (with default value)\n  const [DATA, SET_DATA] = useState('fc5e038d38a57032085441e7fe7010b0');\n\n  // Max value for a color component\n  const MAX_COLOR = 200;\n\n  // Min value for a color component\n  const MIN_COLOR = 120;\n\n  // Chance of a square being filled [0, 1]\n  const FILL_CHANCE = 0.5;\n\n  // Size of a grid square in pixels\n  const SQUARE = 16;\n\n  // Number of squares width and height\n  const GRID = 5;\n\n  // Padding on the edge of the canvas in px\n  const PADDING = SQUARE / 2;\n\n  // Size of the canvas\n  const SIZE = SQUARE * GRID + PADDING * 2;\n\n  /*\n   * Fill in a square on the canvas.\n   */\n  const fillBlock = function (x: any, y: any, color: any, ctx: any) {\n    ctx.beginPath();\n    ctx.rect(PADDING + x * SQUARE, PADDING + y * SQUARE, SQUARE, SQUARE);\n    ctx.fillStyle = 'rgb(' + color.join(',') + ')';\n    ctx.fill();\n  };\n\n  /*\n   * Pick random squares to fill in.\n   */\n  const generateIdenticon = function (ctx: any) {\n    // FILL CANVAS BG\n    ctx.beginPath();\n    ctx.rect(0, 0, SIZE, SIZE);\n    ctx.fillStyle = '#F0ECE6';\n    ctx.fill();\n\n    // GENERATE COLOR\n    const color = genColor();\n\n    // FILL THE SQUARES\n    for (let x = 0; x < Math.ceil(GRID / 2); x++) {\n      for (let y = 0; y < GRID; y++) {\n        // CALCULATE HASH POSITION\n        let position = GRID * x + y;\n\n        // IF POSITION OVER INDEXING THE HASH, BEGIN OVER AGAIN\n        if (position > DATA.length) {\n          position = position - DATA.length;\n        }\n\n        const actual = parseInt(DATA[position], 16);\n        if (actual < FILL_CHANCE * 16) {\n          fillBlock(x, y, color, ctx);\n\n          // FILL RIGHT SIDE SYMMETRICALLY\n          if (x < Math.floor(GRID / 2)) {\n            fillBlock(GRID - 1 - x, y, color, ctx);\n          }\n        }\n      }\n    }\n  };\n\n  /*\n   * Get a color with low saturation.\n   */\n  const genColor = function () {\n    const rgb = [];\n    for (let i = 0; i < 3; i++) {\n      const val = Math.floor(parseInt(DATA[i], 16) * 16);\n      const minEnforced = Math.max(MIN_COLOR, val);\n      const maxEnforced = Math.min(MAX_COLOR, minEnforced);\n      rgb.push(maxEnforced);\n    }\n    return rgb;\n  };\n\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    SET_DATA(Helper.getHash(props.name));\n  }, [props.name]);\n\n  useEffect(() => {\n    const canvas: any = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.width = SIZE;\n    context.height = SIZE;\n\n    generateIdenticon(context);\n    // eslint-disable-next-line\n  }, [DATA]);\n\n  return (\n    <div style={{ width: '100px', height: '100px' }}>\n      <canvas ref={canvasRef} {...props} />\n    </div>\n  );\n};\n\nexport default React.memo(Identicon);\n","import { Card, Row, Col, Typography, Rate } from 'antd';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { IAppRootState } from '../../redux/root-reducer.type';\nimport { StarshipData } from '../../redux/starships/starships.types';\nimport { Helper } from '../../utils/Helper';\nimport withLoadingStarships from '../wrapper/withLoadingStarships';\nimport Identicon from './Identicon';\n\nconst RandomStarship = () => {\n  const randomNumber = Math.floor(Math.random() * 36);\n  const randomStarship = useSelector<IAppRootState, StarshipData>(\n    (state) => state.starships.list[randomNumber],\n    shallowEqual\n  );\n  const view = (\n    <>\n      <Typography.Title level={3}>Featured Starship</Typography.Title>\n      <Card\n        title={randomStarship?.name}\n        style={{\n          width: 300,\n          textAlign: 'center',\n        }}\n      >\n        <Row justify=\"center\">\n          <Identicon name={randomStarship?.name} />\n          <i>\n            {randomStarship?.model} / {randomStarship?.manufacturer}\n          </i>\n        </Row>\n        <Row justify=\"space-between\">\n          <Col className=\"row-header\">Cost</Col>\n          <Col>{randomStarship?.cost_in_credits}</Col>\n        </Row>\n        <Row justify=\"space-between\">\n          <Col className=\"row-header\">Crew</Col>\n          <Col>{randomStarship?.crew}</Col>\n        </Row>\n\n        <Row justify=\"space-between\">\n          <Col className=\"row-header\">Passengers</Col>\n          <Col>{randomStarship?.passengers}</Col>\n        </Row>\n        <Row justify=\"space-between\">\n          <Col className=\"row-header\">Cargo Capacity</Col>\n          <Col>{randomStarship?.cargo_capacity}</Col>\n        </Row>\n        <Row justify=\"space-between\">\n          <Col className=\"row-header\">Consumables</Col>\n          <Col>{randomStarship?.consumables}</Col>\n        </Row>\n        <Row justify=\"space-between\">\n          <Col className=\"row-header\">Hyperdrive</Col>\n          <Col>\n            <Rate\n              allowHalf={true}\n              value={Helper.roundNearestHalf(\n                parseFloat(randomStarship?.hyperdrive_rating)\n              )}\n            />\n          </Col>\n        </Row>\n      </Card>\n    </>\n  );\n  if (randomStarship) return view;\n  else return null;\n};\nexport default withLoadingStarships(RandomStarship);\n","import { Button, Table, Typography } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { removeFromSquad } from '../../redux/home-base/homeBase.action';\nimport { PersonData } from '../../redux/people/people.types';\nimport { IAppRootState } from '../../redux/root-reducer.type';\n\nconst Squad = () => {\n  const dispatch = useDispatch();\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: 'Gender',\n      dataIndex: 'gender',\n      key: 'gender',\n    },\n    {\n      title: 'Height',\n      dataIndex: 'height',\n      key: 'height',\n    },\n    {\n      title: 'Birth Year',\n      dataIndex: 'birth_year',\n      key: 'birth_year',\n    },\n    {\n      title: 'Remove',\n      dataIndex: 'name',\n      render: (text: any, row: any, index: any) => {\n        return {\n          children: (\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                dispatch(removeFromSquad(index));\n              }}\n            >\n              Remove\n            </Button>\n          ),\n        };\n      },\n    },\n  ];\n\n  const navigate = useNavigate();\n  const squad = useSelector<IAppRootState, PersonData[]>(\n    (state) => state.homeBase.squad\n  );\n  const view = <Table columns={columns} dataSource={squad} />;\n  const viewEmpty = (\n    <Button type=\"primary\" onClick={() => navigate('/people')}>\n      Build your Squad\n    </Button>\n  );\n  return (\n    <>\n      <Typography.Title level={3}>Squad Members</Typography.Title>\n      {squad.length === 0 ? viewEmpty : view}\n    </>\n  );\n};\nexport default Squad;\n","import { Col, Row, Typography } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CaptainModal from './widget/CaptainModal';\nimport Hangar from './widget/Hangar';\nimport RandomPerson from './widget/RandomPerson';\nimport RandomStarship from './widget/RandomStarship';\nimport Squad from './widget/Squad';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const captainName = useSelector(\n    (state: any) => state.homeBase.captain || 'Captain'\n  );\n  return (\n    <div>\n      <CaptainModal />\n      <Typography.Title level={2}>\n        Welcome back,{' '}\n        <span\n          onClick={() => dispatch({ type: 'SET_MODAL_VISIBLE', payload: true })}\n          style={{ cursor: 'pointer' }}\n        >\n          {captainName}\n        </span>\n      </Typography.Title>\n      <Row justify=\"space-around\">\n        <Col span={24} lg={12} xl={10} xxl={5}>\n          <Row justify=\"space-around\">\n            <Col flex={1}>\n              <RandomPerson />\n            </Col>\n            <Col flex={1}>\n              <RandomStarship />\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24} lg={24} xl={14} xxl={8}>\n          <Squad />\n        </Col>\n        <Col span={24} lg={24} xl={24} xxl={10}>\n          <Hangar />\n        </Col>\n      </Row>\n    </div>\n  );\n};\nexport default Home;\n","import { createSelector } from 'reselect';\n\nconst selectSquad = (state: any) => state.homeBase.squad;\n\nexport const isMemberAlready = (personName: any) =>\n  createSelector([selectSquad], (squadMembers) => {\n    const foundMember = squadMembers.filter((m: any) => m.name === personName);\n    return foundMember.length > 0;\n  });\n","import { Card, Row, Col, Space, Typography, Button } from 'antd';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { requestAddToSquad } from '../../redux/home-base/homeBase.action';\nimport { isMemberAlready } from '../../redux/home-base/homeBase.selector';\nimport Gravatar from '../widget/Gravatar';\n\nexport interface IPersonCardProps {\n  name: string;\n  height: string;\n  mass: string;\n  hair_color: string;\n  skin_color: string;\n  eye_color: string;\n  birth_year: string;\n  gender: string;\n}\n\nconst PersonCard = (person: IPersonCardProps) => {\n  const isMemberExists = useSelector((state: any) =>\n    isMemberAlready(person?.name)(state)\n  );\n  const dispatch = useDispatch();\n  const handleOnHire = (e: any) => {\n    dispatch(requestAddToSquad(person?.name));\n  };\n  return (\n    <Card\n      bordered={false}\n      style={{\n        width: 300,\n        textAlign: 'center',\n        display: person ? '' : 'none',\n      }}\n    >\n      <Row justify=\"center\">\n        <Space direction=\"vertical\">\n          <Gravatar name={person?.name} />\n          <Typography.Title level={3}>{person?.name}</Typography.Title>\n        </Space>\n      </Row>\n      <Row justify=\"space-between\">\n        <Col className=\"row-header\">Birth Year</Col>\n        <Col>{person?.birth_year}</Col>\n      </Row>\n      <Row justify=\"space-between\">\n        <Col className=\"row-header\">Gender</Col>\n        <Col className=\"title-case\">{person?.gender}</Col>\n      </Row>\n      <Row justify=\"space-between\">\n        <Col className=\"row-header\">Height</Col>\n        <Col>{person?.height}</Col>\n      </Row>\n      <Row justify=\"space-between\">\n        <Col className=\"row-header\">Hair Color</Col>\n        <Col>{person?.hair_color}</Col>\n      </Row>\n\n      <Row justify=\"space-between\">\n        <Col className=\"row-header\">Eye Color</Col>\n        <Col>{person?.eye_color}</Col>\n      </Row>\n      <Row justify=\"space-between\">\n        <Col className=\"row-header\">Skin Color</Col>\n        <Col>{person?.skin_color}</Col>\n      </Row>\n      <Row justify=\"center\">\n        <Button type=\"primary\" onClick={handleOnHire} disabled={isMemberExists}>\n          {isMemberExists ? 'Hired' : 'Hire'}\n        </Button>\n      </Row>\n    </Card>\n  );\n};\nexport default React.memo(PersonCard);\n","import { shallowEqual, useSelector } from 'react-redux';\nimport { Card } from 'antd';\nimport PersonCard, { IPersonCardProps } from './PersonCard';\nimport withLoadingPeople from '../wrapper/withLoadingPeople';\nimport { IAppRootState } from '../../redux/root-reducer.type';\nimport { PersonData } from '../../redux/people/people.types';\nimport './PeopleList.css';\n\nconst PeopleList = () => {\n  const list = useSelector<IAppRootState, PersonData[]>(\n    (state) => state.people.list,\n    shallowEqual\n  );\n  const viewPerson = list.map((person: IPersonCardProps, index: number) => (\n    <Card.Grid key={index} className=\"person-card-grid\">\n      <PersonCard {...person} />\n    </Card.Grid>\n  ));\n\n  return (\n    <div>\n      <Card>{viewPerson}</Card>\n    </div>\n  );\n};\nexport default withLoadingPeople(PeopleList);\n","import PeopleList from './people/PeopleList';\n\nconst People = () => {\n  return (\n    <div>\n      <PeopleList />\n    </div>\n  );\n};\nexport default People;\n","import { Button, Space, Table, Typography } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { requestAddToHangar } from '../../redux/home-base/homeBase.action';\nimport { IAppRootState } from '../../redux/root-reducer.type';\nimport { StarshipData } from '../../redux/starships/starships.types';\nimport Identicon from '../widget/Identicon';\nimport withLoadingStarships from '../wrapper/withLoadingStarships';\n\nconst Starships = () => {\n  const dispatch = useDispatch();\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      render: (text: any, row: any, index: any) => {\n        return {\n          children: (\n            <Space direction=\"vertical\" align=\"center\">\n              <Identicon name={text} size />\n              <Typography.Title level={5}>{text}</Typography.Title>\n            </Space>\n          ),\n        };\n      },\n    },\n    {\n      title: 'Model',\n      dataIndex: 'model',\n      key: 'model',\n    },\n    {\n      title: 'Manufacturer',\n      dataIndex: 'manufacturer',\n      key: 'manufacturer',\n    },\n    {\n      title: 'Cost in Credits',\n      dataIndex: 'cost_in_credits',\n      key: 'cost_in_credits',\n    },\n    {\n      title: 'Length',\n      dataIndex: 'length',\n      key: 'length',\n    },\n    {\n      title: 'Max Speed',\n      dataIndex: 'max_atmosphering_speed',\n      key: 'max_atmosphering_speed',\n    },\n    {\n      title: 'Crew',\n      dataIndex: 'crew',\n      key: 'crew',\n    },\n    {\n      title: 'Passengers',\n      dataIndex: 'passengers',\n      key: 'passengers',\n    },\n    {\n      title: 'Cargo Capacity',\n      dataIndex: 'cargo_capacity',\n      key: 'cargo_capacity',\n    },\n    {\n      title: 'Consumables',\n      dataIndex: 'consumables',\n      key: 'consumables',\n    },\n    {\n      title: 'Hyperdrive Rating',\n      dataIndex: 'hyperdrive_rating',\n      key: 'hyperdrive_rating',\n    },\n    {\n      title: 'MGLT',\n      dataIndex: 'MGLT',\n      key: 'MGLT',\n    },\n    {\n      title: 'Starship Class',\n      dataIndex: 'starship_class',\n      key: 'starship_class',\n    },\n    {\n      title: 'Add to Hangar',\n      dataIndex: 'name',\n      render: (text: any, row: any, index: any) => {\n        return {\n          children: (\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                const starshipName = text;\n                dispatch(requestAddToHangar(starshipName));\n              }}\n            >\n              Add\n            </Button>\n          ),\n        };\n      },\n    },\n  ];\n\n  const starships = useSelector<IAppRootState, StarshipData[]>(\n    (state) => state.starships.list\n  );\n  return <Table columns={columns} dataSource={starships} />;\n};\nexport default withLoadingStarships(Starships);\n","import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport MyLayout from './components/layout/MyLayout';\n\nimport 'antd/dist/antd.css';\nimport Home from './components/Home';\nimport People from './components/People';\nimport Starships from './components/starships/StarshipList';\n\nfunction App() {\n  return (\n    <Router basename=\"react-kata\">\n      <MyLayout>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/people\" element={<People />} />\n          <Route path=\"/starships\" element={<Starships />} />\n        </Routes>\n      </MyLayout>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { IHomeBaseState } from './homeBase.types';\n\nconst INITIAL_STATE: IHomeBaseState = {\n  captain: '',\n  isModalVisible: false,\n  squad: [],\n  squadMax: 10,\n  hangar: [],\n  hangarCapacity: 10,\n};\n\nconst homeBaseReducer = (state = INITIAL_STATE, action: any) => {\n  switch (action.type) {\n    case 'SET_MODAL_VISIBLE':\n      return {\n        ...state,\n        isModalVisible: action.payload,\n      };\n    case 'SET_CAPTAIN':\n      return {\n        ...state,\n        captain: action.payload,\n        isModalVisible: false,\n      };\n    case 'ADD_TO_SQUAD':\n      return {\n        ...state,\n        squad:\n          state.squad.length < state.squadMax\n            ? [...state.squad, ...action.payload]\n            : state.squad,\n      };\n    case 'ADD_TO_HANGAR':\n      return {\n        ...state,\n        hangar:\n          state.hangar.length < state.hangarCapacity\n            ? [...state.hangar, ...action.payload]\n            : state.hangar,\n      };\n    case 'REMOVE_FROM_SQUAD':\n      // create copy of the state and remove the indexed item from it\n      const copySquad = [...state.squad];\n      copySquad.splice(action.payload, 1);\n\n      return {\n        ...state,\n        squad: copySquad,\n      };\n    case 'REMOVE_FROM_HANGAR':\n      const copyHangar = [...state.hangar];\n      copyHangar.splice(action.payload, 1);\n\n      return {\n        ...state,\n        hangar: copyHangar,\n      };\n    default:\n      return state;\n  }\n};\nexport default homeBaseReducer;\n","import { IPeopleState } from './people.types';\n\nconst INITIAL_STATE: IPeopleState = {\n  list: [],\n  loading: false,\n  error: null,\n};\n\nconst peopleReducer = (state = INITIAL_STATE, action: any) => {\n  switch (action.type) {\n    case 'FETCH_PEOPLE_START':\n      return {\n        ...state,\n        loading: true,\n      };\n    case 'FETCH_PEOPLE_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        list: action.payload,\n      };\n    case 'FETCH_PEOPLE_ERROR':\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default peopleReducer;\n","import { IStarshipsState } from './starships.types';\n\nconst INITIAL_STATE: IStarshipsState = {\n  list: [],\n  loading: false,\n  error: null,\n};\n\nconst starshipsReducer = (state = INITIAL_STATE, action: any) => {\n  switch (action.type) {\n    case 'FETCH_STARSHIPS_START':\n      return {\n        ...state,\n        loading: true,\n      };\n    case 'FETCH_STARSHIPS_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        list: action.payload,\n      };\n    case 'FETCH_STARSHIPS_ERROR':\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default starshipsReducer;\n","import { combineReducers } from 'redux';\nimport homeBaseReducer from './home-base/homeBase.reducer';\nimport peopleReducer from './people/people.reducer';\nimport starshipsReducer from './starships/starships.reducer';\n\nconst rootReducer = combineReducers({\n  people: peopleReducer,\n  starships: starshipsReducer,\n  homeBase: homeBaseReducer,\n});\n\nexport default rootReducer;\n","import { put, select, takeLatest } from 'redux-saga/effects';\nimport { message } from 'antd';\nimport { addToHangar, addToSquad } from './homeBase.action';\n\n// Worker Functions\nfunction* requestAddToSquad(action: any): Generator<any, any, any> {\n  // select to extract people from state\n  const people = yield select((state: any) => state.people.list);\n  // the triggering request comes with a personName as a payload\n  const foundPerson = people.filter((p: any) => p.name === action.payload);\n  // add the person to squad\n  yield put(addToSquad(foundPerson));\n}\n\nfunction* requestAddToHangar(action: any): Generator<any, any, any> {\n  const starships = yield select((state: any) => state.starships.list);\n  const hangarShips = yield select((state: any) => state.homeBase.hangar);\n  const hangarMaxCapacity = yield select(\n    (state: any) => state.homeBase.hangarCapacity\n  );\n  const starshipName = action.payload;\n\n  if (starshipName === 'Death Star') {\n    message.error('Dream on! Death Star is off limits');\n  } else if (hangarShips.length < hangarMaxCapacity) {\n    const foundStarship = starships.filter((s: any) => s.name === starshipName);\n    yield put(addToHangar(foundStarship));\n    message.info(`Added to hangar: ${starshipName}`);\n  } else {\n    message.error('Hangar is fully occupied');\n  }\n}\n\n// Watcher Functions\nexport function* watchRequestAddToSquad() {\n  // triggering request\n  yield takeLatest('REQUEST_ADD_TO_SQUAD', requestAddToSquad);\n}\n\nexport function* watchRequestAddToHangar() {\n  // triggering request\n  yield takeLatest('REQUEST_ADD_TO_HANGAR', requestAddToHangar);\n}\n","const baseUrl = \"https://swapi.dev/api\";\nexport const SwapiUrls = {\n  PEOPLE: `${baseUrl}/people/`,\n  PLANETS: `${baseUrl}/planets/`,\n  FILMS: `${baseUrl}/films/`,\n  SPECIES: `${baseUrl}/species/`,\n  VEHICLES: `${baseUrl}/vehicles/`,\n  STARSHIPS: `${baseUrl}/starships/`,\n};\n","import { SwapiUrls } from './SwapiUrls';\n\nexport const FetchHelper = {\n  async getAllPeople(): Promise<[] | any> {\n    let people: any[] = [];\n    await fetch(SwapiUrls.PEOPLE)\n      .then((res: Response) => res.json())\n      .then((data: any) => {\n        // first fetch is to get the total number of records and initialize the people array with first page\n        people = data.results;\n        return data.count;\n      })\n      .then((count: number) => {\n        // subsequently, we build an array of fetch function calls to all the remaining page URLs\n        const totalPages = Math.ceil(count / 10);\n        const fetchPages = [];\n        for (let i = 2; i <= totalPages; i++) {\n          fetchPages.push(fetch(`${SwapiUrls.PEOPLE}?page=${i}`));\n        }\n        // Promise all takes a list of promises as an input and resolves them into a single array of results\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all\n        return Promise.all(fetchPages);\n      })\n      .then((results: any) => {\n        return Promise.all(results.map((r: any) => r.json()));\n      })\n      .then((data: any) => {\n        // this section appends all the response results into the existing people array\n        // read more about Array.prototype.reduce()\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce\n        people = data.reduce(\n          (accumulator: any, item: any) => [...accumulator, ...item.results],\n          people\n        );\n      });\n    return people;\n  },\n  async getAll(url: string): Promise<[] | any> {\n    let list: any[] = [];\n    await fetch(url)\n      .then((res: Response) => res.json())\n      .then((data: any) => {\n        list = data.results;\n        return data.count;\n      })\n      .then((count: number) => {\n        const totalPages = Math.ceil(count / 10);\n        const fetchPages = [];\n        for (let i = 2; i <= totalPages; i++) {\n          fetchPages.push(fetch(`${url}?page=${i}`));\n        }\n        return Promise.all(fetchPages);\n      })\n      .then((results: any) => {\n        return Promise.all(results.map((r: any) => r.json()));\n      })\n      .then((data: any) => {\n        list = data.reduce(\n          (accumulator: any, item: any) => [...accumulator, ...item.results],\n          list\n        );\n      });\n    return list;\n  },\n};\n","import { call, put, takeLatest } from 'redux-saga/effects';\nimport { FetchHelper } from '../../services/FetchHelper';\nimport { SwapiUrls } from '../../services/SwapiUrls';\nimport { fetchPeopleError, fetchPeopleSuccess } from './people.action';\n\n// This is a worker function responsible for fetching API and bind data to state if success or bind error if fail\nexport function* fetchPeopleAsync(): Generator<any, any, any> {\n  try {\n    const people = yield call(FetchHelper.getAll, SwapiUrls.PEOPLE);\n    yield put(fetchPeopleSuccess(people));\n  } catch (e: any) {\n    yield put(fetchPeopleError(e));\n  }\n}\n\n// This is a watcher function, once FETCH_PEOPLE_START is received, it will trigger fetchPeopleAsync\nexport function* watchFetchPeopleStart() {\n  yield takeLatest('FETCH_PEOPLE_START', fetchPeopleAsync);\n}\n","import { call, put, takeLatest } from 'redux-saga/effects';\nimport { FetchHelper } from '../../services/FetchHelper';\nimport { SwapiUrls } from '../../services/SwapiUrls';\nimport { fetchStarshipsSuccess, fetchStarshipsError } from './starships.action';\n\nfunction* fetchPeopleAsync(): Generator<any, any, any> {\n  try {\n    const people = yield call(FetchHelper.getAll, SwapiUrls.STARSHIPS);\n    yield put(fetchStarshipsSuccess(people));\n  } catch (e: any) {\n    yield put(fetchStarshipsError(e.message || e));\n  }\n}\n\nexport function* watchFetchStarships() {\n  yield takeLatest('FETCH_STARSHIPS_START', fetchPeopleAsync);\n}\n","import { all, call } from 'redux-saga/effects';\nimport {\n  watchRequestAddToHangar,\n  watchRequestAddToSquad,\n} from './home-base/homeBase.saga';\nimport { watchFetchPeopleStart } from './people/people.saga';\nimport { watchFetchStarships } from './starships/starships.saga';\n\nexport default function* rootSaga() {\n  yield all([\n    call(watchFetchPeopleStart),\n    call(watchFetchStarships),\n    call(watchRequestAddToSquad),\n    call(watchRequestAddToHangar),\n  ]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './root-reducer';\nimport rootSaga from './root-saga';\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares: any = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(rootSaga);\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}