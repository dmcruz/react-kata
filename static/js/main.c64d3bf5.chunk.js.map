{"version":3,"sources":["components/layout/MyLayout.tsx","utils/Helper.ts","components/widget/Gravatar.tsx","components/widget/RandomPerson.tsx","components/Home.tsx","services/SwapiUrls.ts","services/FetchHelper.ts","redux/people/people.action.ts","components/people/PersonCard.tsx","components/people/PeopleList.tsx","components/People.tsx","redux/starships/starships.action.ts","components/starships/StarshipList.tsx","App.tsx","reportWebVitals.ts","redux/people/people.reducer.ts","redux/starships/starships.reducer.ts","redux/store.ts","index.tsx"],"names":["Header","Layout","Content","Footer","MyLayout","children","className","Title","theme","mode","Item","title","to","style","padding","minHeight","Helper","key","size","Md5","hashStr","Gravatar","name","alt","src","React","memo","RandomPerson","randomNumber","Math","floor","random","randomPerson","useSelector","state","people","list","view","level","width","textAlign","justify","birth_year","gender","height","hair_color","eye_color","skin_color","Home","span","baseUrl","SwapiUrls","PEOPLE","PLANETS","FILMS","SPECIES","VEHICLES","STARSHIPS","FetchHelper","fetch","then","res","json","data","results","count","totalPages","ceil","fetchPages","i","push","Promise","all","map","r","reduce","accumulator","item","url","setPeople","type","payload","PersonCard","person","bordered","display","direction","PeopleList","dispatch","useDispatch","useEffect","a","peopleList","message","error","viewPerson","index","Grid","People","setStarships","columns","dataIndex","Starships","starships","dataSource","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","peopleReducer","action","starshipsReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c64d3bf5.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\nimport { Layout, Menu, Typography } from 'antd';\nimport './MyLayout.css';\nconst { Header, Content, Footer } = Layout;\n\nconst MyLayout: React.FC = ({ children }) => {\n  return (\n    <Layout className=\"layout\">\n      <Header>\n        <div className=\"logo\">\n          <Typography.Title>SW Manager</Typography.Title>\n        </div>\n        <Menu theme=\"dark\" mode=\"horizontal\">\n          <Menu.Item key=\"home\" title=\"Home\">\n            <Link to=\"/\">Home</Link>\n          </Menu.Item>\n          <Menu.Item key=\"people\" title=\"People\">\n            <Link to=\"/people\">People</Link>\n          </Menu.Item>\n          <Menu.Item key=\"starships\" title=\"Starships\">\n            <Link to=\"/starships\">Starships</Link>\n          </Menu.Item>\n        </Menu>\n      </Header>\n      <Content style={{ padding: '0 50px', minHeight: '50px' }}>\n        <div className=\"site-content\">{children}</div>\n      </Content>\n      <Footer>React Kata &copy; 2021</Footer>\n    </Layout>\n  );\n};\n\nexport default MyLayout;\n","import { Md5 } from 'ts-md5/dist/md5';\n\nexport const Helper = {\n  getGravatarUrl(key: string, size: number = 100) {\n    return `https://www.gravatar.com/avatar/${Md5.hashStr(\n      key\n    )}?d=identicon&s=${size}`;\n  },\n};\n","import { Avatar } from 'antd';\nimport React from 'react';\n\nimport { Helper } from '../../utils/Helper';\n\ninterface IGravarProps {\n  name: string;\n}\nconst Gravatar: React.FC<IGravarProps> = ({ name }) => {\n  if (!name) return null;\n  return (\n    <Avatar alt=\"Gravatar\" src={Helper.getGravatarUrl(name, 100)} size={100} />\n  );\n};\nexport default React.memo(Gravatar);\n","import { Card, Row, Col, Typography } from 'antd';\nimport { useSelector } from 'react-redux';\nimport Gravatar from './Gravatar';\n\nconst RandomPerson = () => {\n  const randomNumber = Math.floor(Math.random() * 82);\n  const randomPerson = useSelector(\n    (state: any) => state.people.list[randomNumber]\n  );\n  const view = (\n    <>\n      <Typography.Title level={3}>Featured Person</Typography.Title>\n      <Card\n        title={randomPerson?.name}\n        style={{\n          width: 300,\n          textAlign: 'center',\n        }}\n      >\n        <Row justify=\"center\">\n          <Gravatar name={randomPerson?.name} />\n        </Row>\n        <Row justify=\"space-between\">\n          <Col className=\"row-header\">Birth Year</Col>\n          <Col>{randomPerson?.birth_year}</Col>\n        </Row>\n        <Row justify=\"space-between\">\n          <Col className=\"row-header\">Gender</Col>\n          <Col className=\"title-case\">{randomPerson?.gender}</Col>\n        </Row>\n        <Row justify=\"space-between\">\n          <Col className=\"row-header\">Height</Col>\n          <Col>{randomPerson?.height}</Col>\n        </Row>\n        <Row justify=\"space-between\">\n          <Col className=\"row-header\">Hair Color</Col>\n          <Col>{randomPerson?.hair_color}</Col>\n        </Row>\n\n        <Row justify=\"space-between\">\n          <Col className=\"row-header\">Eye Color</Col>\n          <Col>{randomPerson?.eye_color}</Col>\n        </Row>\n        <Row justify=\"space-between\">\n          <Col className=\"row-header\">Skin Color</Col>\n          <Col>{randomPerson?.skin_color}</Col>\n        </Row>\n      </Card>\n    </>\n  );\n  if (randomPerson) return view;\n  else return null;\n};\nexport default RandomPerson;\n","import { Col, Row } from 'antd';\nimport RandomPerson from './widget/RandomPerson';\nconst Home = () => {\n  return (\n    <div>\n      <Row>\n        <Col span={8}>\n          <RandomPerson />\n        </Col>\n        <Col span={8}></Col>\n        <Col span={8}></Col>\n      </Row>\n    </div>\n  );\n};\nexport default Home;\n","const baseUrl = \"https://swapi.dev/api\";\nexport const SwapiUrls = {\n  PEOPLE: `${baseUrl}/people/`,\n  PLANETS: `${baseUrl}/planets/`,\n  FILMS: `${baseUrl}/films/`,\n  SPECIES: `${baseUrl}/species/`,\n  VEHICLES: `${baseUrl}/vehicles/`,\n  STARSHIPS: `${baseUrl}/starships/`,\n};\n","import { SwapiUrls } from './SwapiUrls';\n\nexport const FetchHelper = {\n  async getAllPeople(): Promise<[] | any> {\n    let people: any[] = [];\n    await fetch(SwapiUrls.PEOPLE)\n      .then((res: Response) => res.json())\n      .then((data: any) => {\n        // first fetch is to get the total number of records and initialize the people array with first page\n        people = data.results;\n        return data.count;\n      })\n      .then((count: number) => {\n        // subsequently, we build an array of fetch function calls to all the remaining page URLs\n        const totalPages = Math.ceil(count / 10);\n        const fetchPages = [];\n        for (let i = 2; i <= totalPages; i++) {\n          fetchPages.push(fetch(`${SwapiUrls.PEOPLE}?page=${i}`));\n        }\n        // Promise all takes a list of promises as an input and resolves them into a single array of results\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all\n        return Promise.all(fetchPages);\n      })\n      .then((results: any) => {\n        return Promise.all(results.map((r: any) => r.json()));\n      })\n      .then((data: any) => {\n        // this section appends all the response results into the existing people array\n        // read more about Array.prototype.reduce()\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce\n        people = data.reduce(\n          (accumulator: any, item: any) => [...accumulator, ...item.results],\n          people\n        );\n      });\n    return people;\n  },\n  async getAll(url: string): Promise<[] | any> {\n    let list: any[] = [];\n    await fetch(url)\n      .then((res: Response) => res.json())\n      .then((data: any) => {\n        list = data.results;\n        return data.count;\n      })\n      .then((count: number) => {\n        const totalPages = Math.ceil(count / 10);\n        const fetchPages = [];\n        for (let i = 2; i <= totalPages; i++) {\n          fetchPages.push(fetch(`${url}?page=${i}`));\n        }\n        return Promise.all(fetchPages);\n      })\n      .then((results: any) => {\n        return Promise.all(results.map((r: any) => r.json()));\n      })\n      .then((data: any) => {\n        list = data.reduce(\n          (accumulator: any, item: any) => [...accumulator, ...item.results],\n          list\n        );\n      });\n    return list;\n  },\n};\n","export const setPeople = (list: []) => ({\n  type: \"SET_PEOPLE_LIST\",\n  payload: list,\n});\n","import { Card, Row, Col, Space, Typography } from 'antd';\nimport React from 'react';\nimport Gravatar from '../widget/Gravatar';\n\nexport interface IPersonCardProps {\n  name: string;\n  height: string;\n  mass: string;\n  hair_color: string;\n  skin_color: string;\n  eye_color: string;\n  birth_year: string;\n  gender: string;\n}\n\nconst PersonCard = (person: IPersonCardProps) => {\n  return (\n    <Card\n      bordered={false}\n      style={{\n        width: 300,\n        textAlign: 'center',\n        display: person ? '' : 'none',\n      }}\n    >\n      <Row justify=\"center\">\n        <Space direction=\"vertical\">\n          <Gravatar name={person?.name} />\n          <Typography.Title level={3}>{person?.name}</Typography.Title>\n        </Space>\n      </Row>\n      <Row justify=\"space-between\">\n        <Col className=\"row-header\">Birth Year</Col>\n        <Col>{person?.birth_year}</Col>\n      </Row>\n      <Row justify=\"space-between\">\n        <Col className=\"row-header\">Gender</Col>\n        <Col className=\"title-case\">{person?.gender}</Col>\n      </Row>\n      <Row justify=\"space-between\">\n        <Col className=\"row-header\">Height</Col>\n        <Col>{person?.height}</Col>\n      </Row>\n      <Row justify=\"space-between\">\n        <Col className=\"row-header\">Hair Color</Col>\n        <Col>{person?.hair_color}</Col>\n      </Row>\n\n      <Row justify=\"space-between\">\n        <Col className=\"row-header\">Eye Color</Col>\n        <Col>{person?.eye_color}</Col>\n      </Row>\n      <Row justify=\"space-between\">\n        <Col className=\"row-header\">Skin Color</Col>\n        <Col>{person?.skin_color}</Col>\n      </Row>\n    </Card>\n  );\n};\nexport default React.memo(PersonCard);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Card, message } from 'antd';\nimport { FetchHelper } from '../../services/FetchHelper';\nimport { setPeople } from '../../redux/people/people.action';\nimport { useEffect } from 'react';\nimport PersonCard, { IPersonCardProps } from './PersonCard';\n\nconst PeopleList = () => {\n  const dispatch = useDispatch();\n  const list: [] = useSelector((state: any) => state.people.list);\n  useEffect(() => {\n    (async () => {\n      try {\n        const peopleList = await FetchHelper.getAllPeople();\n        dispatch(setPeople(peopleList));\n      } catch (error: any) {\n        message.error(`${error}`);\n      }\n    })();\n    // eslint-disable-next-line\n  }, []);\n\n  const viewPerson = list.map((person: IPersonCardProps, index: number) => (\n    <Card.Grid style={{ width: '25%', textAlign: 'center' }}>\n      <PersonCard key={index} {...person} />\n    </Card.Grid>\n  ));\n\n  return (\n    <div>\n      <Card title=\"People\">{viewPerson}</Card>\n    </div>\n  );\n};\nexport default PeopleList;\n","import PeopleList from './people/PeopleList';\n\nconst People = () => {\n  return (\n    <div>\n      <PeopleList />\n    </div>\n  );\n};\nexport default People;\n","export const setStarships = (list: []) => ({\n  type: 'SET_STARSHIPS_LIST',\n  payload: list,\n});\n","import { message, Table } from 'antd';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setStarships } from '../../redux/starships/starships.action';\nimport { FetchHelper } from '../../services/FetchHelper';\nimport { SwapiUrls } from '../../services/SwapiUrls';\n\nconst columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n  },\n  {\n    title: 'Model',\n    dataIndex: 'model',\n    key: 'model',\n  },\n  {\n    title: 'Manufacturer',\n    dataIndex: 'manufacturer',\n    key: 'manufacturer',\n  },\n  {\n    title: 'Cost in Credits',\n    dataIndex: 'cost_in_credits',\n    key: 'cost_in_credits',\n  },\n  {\n    title: 'Length',\n    dataIndex: 'length',\n    key: 'length',\n  },\n  {\n    title: 'Max Speed',\n    dataIndex: 'max_atmosphering_speed',\n    key: 'max_atmosphering_speed',\n  },\n  {\n    title: 'Crew',\n    dataIndex: 'crew',\n    key: 'crew',\n  },\n  {\n    title: 'Passengers',\n    dataIndex: 'passengers',\n    key: 'passengers',\n  },\n  {\n    title: 'Cargo Capacity',\n    dataIndex: 'cargo_capacity',\n    key: 'cargo_capacity',\n  },\n  {\n    title: 'Consumables',\n    dataIndex: 'consumables',\n    key: 'consumables',\n  },\n  {\n    title: 'Hyperdrive Rating',\n    dataIndex: 'hyperdrive_rating',\n    key: 'hyperdrive_rating',\n  },\n  {\n    title: 'MGLT',\n    dataIndex: 'MGLT',\n    key: 'MGLT',\n  },\n  {\n    title: 'Starship Class',\n    dataIndex: 'starship_class',\n    key: 'starship_class',\n  },\n];\n\nconst Starships = () => {\n  const dispatch = useDispatch();\n  const starships = useSelector((state: any) =>\n    // adding key to the list by remapping the array\n    state.starships.list.map((item: any, index: number) => ({\n      ...item,\n      key: index,\n    }))\n  );\n  useEffect(() => {\n    (async () => {\n      try {\n        const list = await FetchHelper.getAll(SwapiUrls.STARSHIPS);\n        dispatch(setStarships(list));\n      } catch (error: any) {\n        message.error(`${error}`);\n      }\n    })();\n    // eslint-disable-next-line\n  }, []);\n  return <Table columns={columns} dataSource={starships} />;\n};\nexport default Starships;\n","import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport MyLayout from './components/layout/MyLayout';\n\nimport 'antd/dist/antd.css';\nimport Home from './components/Home';\nimport People from './components/People';\nimport Starships from './components/starships/StarshipList';\n\nfunction App() {\n  return (\n    <Router>\n      <MyLayout>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/people\" element={<People />} />\n          <Route path=\"/starships\" element={<Starships />} />\n        </Routes>\n      </MyLayout>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export interface IPerson {\n  name: string;\n  height: string;\n  mass: string;\n  hair_color: string;\n  skin_color: string;\n  eye_color: string;\n  birth_year: string;\n  gender: string;\n}\nexport interface IPeopleState {\n  list: Array<IPerson>;\n}\nconst INITIAL_STATE: IPeopleState = {\n  list: [],\n};\n\nconst peopleReducer = (state = INITIAL_STATE, action: any) => {\n  switch (action.type) {\n    case 'SET_PEOPLE_LIST':\n      return {\n        ...state,\n        list: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default peopleReducer;\n","const INITIAL_STATE = {\n  list: [],\n};\n\nconst starshipsReducer = (state = INITIAL_STATE, action: any) => {\n  switch (action.type) {\n    case 'SET_STARSHIPS_LIST':\n      return {\n        ...state,\n        list: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default starshipsReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport logger from 'redux-logger';\nimport peopleReducer from './people/people.reducer';\nimport starshipsReducer from './starships/starships.reducer';\n\nconst middlewares = [];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nconst rootReducer = combineReducers({\n  people: peopleReducer,\n  starships: starshipsReducer,\n});\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}